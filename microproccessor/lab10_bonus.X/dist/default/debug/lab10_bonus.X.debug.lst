

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 20 04:17:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 04/07/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _RCREG	set	4014
    71   000000                     _TXREG	set	4013
    72   000000                     _PIE1bits	set	3997
    73   000000                     _SPBRG	set	4015
    74   000000                     _BAUDCONbits	set	4024
    75   000000                     _PIR1bits	set	3998
    76   000000                     _CCP1CON	set	4029
    77   000000                     _ADCON0bits	set	4034
    78   000000                     _ADRESL	set	4035
    79   000000                     _ADRESH	set	4036
    80   000000                     _ADCON1	set	4033
    81   000000                     _ADFM	set	32263
    82   000000                     _ADCON2bits	set	4032
    83   000000                     _CREN	set	32092
    84   000000                     _RCIF	set	31989
    85   000000                     _IRCF0	set	32412
    86   000000                     _IRCF1	set	32413
    87   000000                     _LATD	set	3980
    88   000000                     _INTCONbits	set	4082
    89   000000                     _TRISA	set	3986
    90   000000                     _TRISCbits	set	3988
    91   000000                     _RCONbits	set	4048
    92   000000                     _TRISD	set	3989
    93   000000                     _RCSTAbits	set	4011
    94   000000                     _TXSTAbits	set	4012
    95   000000                     _IPR1bits	set	3999
    96   000000                     _IRCF2	set	32414
    97                           
    98                           	psect	smallconst
    99   000600                     __psmallconst:
   100                           	callstack 0
   101   000600  00                 	db	0
   102   000601                     STR_2:
   103   000601  0A                 	db	10
   104   000602  0D                 	db	13
   105   000603  5B                 	db	91	;'['
   106   000604  49                 	db	73	;'I'
   107   000605  4E                 	db	78	;'N'
   108   000606  46                 	db	70	;'F'
   109   000607  4F                 	db	79	;'O'
   110   000608  5D                 	db	93	;']'
   111   000609  20                 	db	32
   112   00060A  65                 	db	101	;'e'
   113   00060B  78                 	db	120	;'x'
   114   00060C  69                 	db	105	;'i'
   115   00060D  74                 	db	116	;'t'
   116   00060E  20                 	db	32
   117   00060F  6D                 	db	109	;'m'
   118   000610  6F                 	db	111	;'o'
   119   000611  64                 	db	100	;'d'
   120   000612  65                 	db	101	;'e'
   121   000613  31                 	db	49	;'1'
   122   000614  0A                 	db	10
   123   000615  0D                 	db	13
   124   000616  00                 	db	0
   125   000617                     STR_5:
   126   000617  0A                 	db	10
   127   000618  0D                 	db	13
   128   000619  5B                 	db	91	;'['
   129   00061A  49                 	db	73	;'I'
   130   00061B  4E                 	db	78	;'N'
   131   00061C  46                 	db	70	;'F'
   132   00061D  4F                 	db	79	;'O'
   133   00061E  5D                 	db	93	;']'
   134   00061F  20                 	db	32
   135   000620  65                 	db	101	;'e'
   136   000621  78                 	db	120	;'x'
   137   000622  69                 	db	105	;'i'
   138   000623  74                 	db	116	;'t'
   139   000624  20                 	db	32
   140   000625  6D                 	db	109	;'m'
   141   000626  6F                 	db	111	;'o'
   142   000627  64                 	db	100	;'d'
   143   000628  65                 	db	101	;'e'
   144   000629  32                 	db	50	;'2'
   145   00062A  0A                 	db	10
   146   00062B  0D                 	db	13
   147   00062C  00                 	db	0
   148   00062D                     STR_1:
   149   00062D  5B                 	db	91	;'['
   150   00062E  49                 	db	73	;'I'
   151   00062F  4E                 	db	78	;'N'
   152   000630  46                 	db	70	;'F'
   153   000631  4F                 	db	79	;'O'
   154   000632  5D                 	db	93	;']'
   155   000633  20                 	db	32
   156   000634  67                 	db	103	;'g'
   157   000635  6F                 	db	111	;'o'
   158   000636  20                 	db	32
   159   000637  74                 	db	116	;'t'
   160   000638  6F                 	db	111	;'o'
   161   000639  20                 	db	32
   162   00063A  6D                 	db	109	;'m'
   163   00063B  6F                 	db	111	;'o'
   164   00063C  64                 	db	100	;'d'
   165   00063D  65                 	db	101	;'e'
   166   00063E  31                 	db	49	;'1'
   167   00063F  0A                 	db	10
   168   000640  0D                 	db	13
   169   000641  00                 	db	0
   170   000642                     STR_4:
   171   000642  5B                 	db	91	;'['
   172   000643  49                 	db	73	;'I'
   173   000644  4E                 	db	78	;'N'
   174   000645  46                 	db	70	;'F'
   175   000646  4F                 	db	79	;'O'
   176   000647  5D                 	db	93	;']'
   177   000648  20                 	db	32
   178   000649  67                 	db	103	;'g'
   179   00064A  6F                 	db	111	;'o'
   180   00064B  20                 	db	32
   181   00064C  74                 	db	116	;'t'
   182   00064D  6F                 	db	111	;'o'
   183   00064E  20                 	db	32
   184   00064F  6D                 	db	109	;'m'
   185   000650  6F                 	db	111	;'o'
   186   000651  64                 	db	100	;'d'
   187   000652  65                 	db	101	;'e'
   188   000653  32                 	db	50	;'2'
   189   000654  0A                 	db	10
   190   000655  0D                 	db	13
   191   000656  00                 	db	0
   192   000657  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   000B4C                     __pcinit:
   198                           	callstack 0
   199   000B4C                     start_initialization:
   200                           	callstack 0
   201   000B4C                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Clear objects allocated to COMRAM (42 bytes)
   205   000B4C  EE00  F001         	lfsr	0,__pbssCOMRAM
   206   000B50  0E2A               	movlw	42
   207   000B52                     clear_0:
   208   000B52  6AEE               	clrf	postinc0,c
   209   000B54  06E8               	decf	wreg,f,c
   210   000B56  E1FD               	bnz	clear_0
   211   000B58                     end_of_initialization:
   212                           	callstack 0
   213   000B58                     __end_of__initialization:
   214                           	callstack 0
   215   000B58  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216   000B5A  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   217   000B5C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   218   000B5E  6EF8               	movwf	tblptru,c
   219   000B60  0E06               	movlw	high __Lsmallconst
   220   000B62  6EF7               	movwf	tblptrh,c
   221   000B64  0100               	movlb	0
   222   000B66  EFA6  F004         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225   000001                     __pbssCOMRAM:
   226                           	callstack 0
   227   000001                     _lenStr:
   228                           	callstack 0
   229   000001                     	ds	2
   230   000003                     _mystring:
   231                           	callstack 0
   232   000003                     	ds	20
   233   000017                     _str:
   234                           	callstack 0
   235   000017                     	ds	20
   236                           
   237                           	psect	cstackCOMRAM
   238   00002B                     __pcstackCOMRAM:
   239                           	callstack 0
   240   00002B                     ?___awmod:
   241                           	callstack 0
   242   00002B                     i1UART_Write@data:
   243                           	callstack 0
   244   00002B                     ___awmod@dividend:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248   00002B                     	ds	2
   249   00002D                     ___awmod@divisor:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253   00002D                     	ds	2
   254   00002F                     ___awmod@counter:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x4
   258   00002F                     	ds	1
   259   000030                     ___awmod@sign:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x5
   263   000030                     	ds	1
   264   000031                     
   265                           ; 1 bytes @ 0x6
   266   000031                     	ds	1
   267   000032                     ??_Lo_ISR:
   268                           
   269                           ; 1 bytes @ 0x7
   270   000032                     	ds	5
   271   000037                     ?_GetString:
   272                           	callstack 0
   273   000037                     UART_Write@data:
   274                           	callstack 0
   275   000037                     ClearBuffer@i:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279   000037                     	ds	1
   280   000038                     UART_Write_Text@text:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xD
   284   000038                     	ds	1
   285   000039                     strcpy@dest:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xE
   289   000039                     	ds	1
   290   00003A                     ??_UART_Write_Text:
   291                           
   292                           ; 1 bytes @ 0xF
   293   00003A                     	ds	1
   294   00003B                     strcpy@src:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298   00003B                     	ds	1
   299   00003C                     UART_Write_Text@i:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x11
   303   00003C                     	ds	1
   304   00003D                     strcpy@s:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x12
   308   00003D                     	ds	2
   309   00003F                     strcpy@d:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x14
   313   00003F                     	ds	2
   314   000041                     ??_Mode1:
   315   000041                     ??_Mode2:
   316                           
   317                           ; 1 bytes @ 0x16
   318   000041                     	ds	2
   319   000043                     
   320                           ; 1 bytes @ 0x18
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 96 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 7
   346 ;; This function calls:
   347 ;;		_ClearBuffer
   348 ;;		_GetString
   349 ;;		_Mode1
   350 ;;		_Mode2
   351 ;;		_SYSTEM_Initialize
   352 ;;		_UART_Write
   353 ;;		_strcpy
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text0
   360   00094C                     __ptext0:
   361                           	callstack 0
   362   00094C                     _main:
   363                           	callstack 24
   364   00094C                     
   365                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 98:     SYSTEM_Initialize();
   366   00094C  ECB5  F005         	call	_SYSTEM_Initialize	;wreg free
   367   000950                     l1312:
   368                           
   369                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 99:     ClearBuffer();
   370   000950  EC51  F005         	call	_ClearBuffer	;wreg free
   371   000954                     l1314:
   372                           
   373                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 102:     {;C:/Users/Annie/MPLABXPro
      +                          jects/lab10_bonus.X/main.c: 103:         strcpy(str, GetString());
   374   000954  0E17               	movlw	low _str
   375   000956  6E39               	movwf	strcpy@dest^0,c
   376   000958  0E00               	movlw	high _str
   377   00095A  6E3A               	movwf	(strcpy@dest+1)^0,c
   378   00095C  ECE7  F005         	call	_GetString	;wreg free
   379   000960  C037  F03B         	movff	?_GetString,strcpy@src
   380   000964  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   381   000968  EC72  F005         	call	_strcpy	;wreg free
   382   00096C                     
   383                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 104:         if (str[0] == 'm' && s
      +                          tr[1] == '1')
   384   00096C  0E6D               	movlw	109
   385   00096E  1817               	xorwf	_str^0,w,c
   386   000970  A4D8               	btfss	status,2,c
   387   000972  EFBD  F004         	goto	u421
   388   000976  EFBF  F004         	goto	u420
   389   00097A                     u421:
   390   00097A  EFD2  F004         	goto	l1326
   391   00097E                     u420:
   392   00097E  0E31               	movlw	49
   393   000980  1818               	xorwf	(_str+1)^0,w,c
   394   000982  A4D8               	btfss	status,2,c
   395   000984  EFC6  F004         	goto	u431
   396   000988  EFC8  F004         	goto	u430
   397   00098C                     u431:
   398   00098C  EFD2  F004         	goto	l1326
   399   000990                     u430:
   400   000990                     
   401                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 105:         {;C:/Users/Annie/MPLAB
      +                          XProjects/lab10_bonus.X/main.c: 106:             UART_Write('\n');
   402   000990  0E0A               	movlw	10
   403   000992  ECCB  F005         	call	_UART_Write
   404                           
   405                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 107:             UART_Write('\r');
   406   000996  0E0D               	movlw	13
   407   000998  ECCB  F005         	call	_UART_Write
   408   00099C                     
   409                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 108:             Mode1();
   410   00099C  ECE9  F003         	call	_Mode1	;wreg free
   411   0009A0  EFA8  F004         	goto	l1312
   412   0009A4                     l1326:
   413   0009A4  0E6D               	movlw	109
   414   0009A6  1817               	xorwf	_str^0,w,c
   415   0009A8  A4D8               	btfss	status,2,c
   416   0009AA  EFD9  F004         	goto	u441
   417   0009AE  EFDB  F004         	goto	u440
   418   0009B2                     u441:
   419   0009B2  EFAA  F004         	goto	l1314
   420   0009B6                     u440:
   421   0009B6  0E32               	movlw	50
   422   0009B8  1818               	xorwf	(_str+1)^0,w,c
   423   0009BA  A4D8               	btfss	status,2,c
   424   0009BC  EFE2  F004         	goto	u451
   425   0009C0  EFE4  F004         	goto	u450
   426   0009C4                     u451:
   427   0009C4  EFAA  F004         	goto	l1314
   428   0009C8                     u450:
   429   0009C8                     
   430                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 112:         {;C:/Users/Annie/MPLAB
      +                          XProjects/lab10_bonus.X/main.c: 113:             UART_Write('\n');
   431   0009C8  0E0A               	movlw	10
   432   0009CA  ECCB  F005         	call	_UART_Write
   433                           
   434                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 114:             UART_Write('\r');
   435   0009CE  0E0D               	movlw	13
   436   0009D0  ECCB  F005         	call	_UART_Write
   437   0009D4                     
   438                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 115:             Mode2();
   439   0009D4  EC2C  F003         	call	_Mode2	;wreg free
   440   0009D8  EFA8  F004         	goto	l1312
   441   0009DC  EF36  F000         	goto	start
   442   0009E0                     __end_of_main:
   443                           	callstack 0
   444                           
   445 ;; *************** function _SYSTEM_Initialize *****************
   446 ;; Defined at:
   447 ;;		line 60 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   461 ;;      Params:         0       0       0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 5
   468 ;; This function calls:
   469 ;;		_ADC_Initialize
   470 ;;		_CCP1_Initialize
   471 ;;		_INTERRUPT_Initialize
   472 ;;		_OSCILLATOR_Initialize
   473 ;;		_UART_Initialize
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480   000B6A                     __ptext1:
   481                           	callstack 0
   482   000B6A                     _SYSTEM_Initialize:
   483                           	callstack 25
   484   000B6A                     
   485                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 63:     OSCILL
      +                          ATOR_Initialize();
   486   000B6A  ECEC  F005         	call	_OSCILLATOR_Initialize	;wreg free
   487                           
   488                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 67:     INTERR
      +                          UPT_Initialize();
   489   000B6E  ECF0  F005         	call	_INTERRUPT_Initialize	;wreg free
   490   000B72                     
   491                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 68:     UART_I
      +                          nitialize();
   492   000B72  EC91  F005         	call	_UART_Initialize	;wreg free
   493   000B76                     
   494                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 69:     CCP1_I
      +                          nitialize();
   495   000B76  ECE1  F005         	call	_CCP1_Initialize	;wreg free
   496   000B7A                     
   497                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 70:     ADC_In
      +                          itialize();
   498   000B7A  ECC0  F005         	call	_ADC_Initialize	;wreg free
   499   000B7E  0012               	return		;funcret
   500   000B80                     __end_of_SYSTEM_Initialize:
   501                           	callstack 0
   502                           
   503 ;; *************** function _UART_Initialize *****************
   504 ;; Defined at:
   505 ;;		line 9 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   519 ;;      Params:         0       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 4
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_SYSTEM_Initialize
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534   000B22                     __ptext2:
   535                           	callstack 0
   536   000B22                     _UART_Initialize:
   537                           	callstack 25
   538   000B22                     
   539                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 20:     TRISD = 0
      +                          ;
   540   000B22  0E00               	movlw	0
   541   000B24  6E95               	movwf	149,c	;volatile
   542                           
   543                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 21:     LATD = 0;
   544   000B26  0E00               	movlw	0
   545   000B28  6E8C               	movwf	140,c	;volatile
   546   000B2A                     
   547                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 23:     TRISCbits
      +                          .TRISC6 = 1;
   548   000B2A  8C94               	bsf	148,6,c	;volatile
   549   000B2C                     
   550                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 24:     TRISCbits
      +                          .TRISC7 = 1;
   551   000B2C  8E94               	bsf	148,7,c	;volatile
   552   000B2E                     
   553                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 27:     TXSTAbits
      +                          .SYNC = 0;
   554   000B2E  98AC               	bcf	172,4,c	;volatile
   555   000B30                     
   556                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 28:     BAUDCONbi
      +                          ts.BRG16 = 0;
   557   000B30  96B8               	bcf	184,3,c	;volatile
   558   000B32                     
   559                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 29:     TXSTAbits
      +                          .BRGH = 0;
   560   000B32  94AC               	bcf	172,2,c	;volatile
   561                           
   562                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 30:     SPBRG = 5
      +                          1;
   563   000B34  0E33               	movlw	51
   564   000B36  6EAF               	movwf	175,c	;volatile
   565   000B38                     
   566                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 34:     RCSTAbits
      +                          .SPEN = 1;
   567   000B38  8EAB               	bsf	171,7,c	;volatile
   568   000B3A                     
   569                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 35:     PIR1bits.
      +                          TXIF = 1;
   570   000B3A  889E               	bsf	158,4,c	;volatile
   571   000B3C                     
   572                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 36:     PIR1bits.
      +                          RCIF = 0;
   573   000B3C  9A9E               	bcf	158,5,c	;volatile
   574   000B3E                     
   575                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 37:     TXSTAbits
      +                          .TXEN = 1;
   576   000B3E  8AAC               	bsf	172,5,c	;volatile
   577   000B40                     
   578                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 38:     RCSTAbits
      +                          .CREN = 1;
   579   000B40  88AB               	bsf	171,4,c	;volatile
   580   000B42                     
   581                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 39:     PIE1bits.
      +                          TXIE = 0;
   582   000B42  989D               	bcf	157,4,c	;volatile
   583   000B44                     
   584                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 40:     IPR1bits.
      +                          TXIP = 0;
   585   000B44  989F               	bcf	159,4,c	;volatile
   586   000B46                     
   587                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 41:     PIE1bits.
      +                          RCIE = 1;
   588   000B46  8A9D               	bsf	157,5,c	;volatile
   589   000B48                     
   590                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 42:     IPR1bits.
      +                          RCIP = 0;
   591   000B48  9A9F               	bcf	159,5,c	;volatile
   592   000B4A  0012               	return		;funcret
   593   000B4C                     __end_of_UART_Initialize:
   594                           	callstack 0
   595                           
   596 ;; *************** function _OSCILLATOR_Initialize *****************
   597 ;; Defined at:
   598 ;;		line 73 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		None
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   612 ;;      Params:         0       0       0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 4
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_SYSTEM_Initialize
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text3
   627   000BD8                     __ptext3:
   628                           	callstack 0
   629   000BD8                     _OSCILLATOR_Initialize:
   630                           	callstack 25
   631   000BD8                     
   632                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 75:     IRCF2 
      +                          = 1;
   633   000BD8  8CD3               	bsf	4051,6,c	;volatile
   634                           
   635                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 76:     IRCF1 
      +                          = 1;
   636   000BDA  8AD3               	bsf	4051,5,c	;volatile
   637                           
   638                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/setting.c: 77:     IRCF0 
      +                          = 0;
   639   000BDC  98D3               	bcf	4051,4,c	;volatile
   640   000BDE  0012               	return		;funcret
   641   000BE0                     __end_of_OSCILLATOR_Initialize:
   642                           	callstack 0
   643                           
   644 ;; *************** function _INTERRUPT_Initialize *****************
   645 ;; Defined at:
   646 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/interrupt_manager.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		None
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   660 ;;      Params:         0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 4
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_SYSTEM_Initialize
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text4
   675   000BE0                     __ptext4:
   676                           	callstack 0
   677   000BE0                     _INTERRUPT_Initialize:
   678                           	callstack 25
   679   000BE0                     
   680                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/interrupt_manager.c: 5:  
      +                             RCONbits.IPEN = 1;
   681   000BE0  8ED0               	bsf	208,7,c	;volatile
   682                           
   683                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/interrupt_manager.c: 6:  
      +                             INTCONbits.GIEH = 1;
   684   000BE2  8EF2               	bsf	242,7,c	;volatile
   685                           
   686                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/interrupt_manager.c: 7:  
      +                             INTCONbits.GIEL = 1;
   687   000BE4  8CF2               	bsf	242,6,c	;volatile
   688   000BE6  0012               	return		;funcret
   689   000BE8                     __end_of_INTERRUPT_Initialize:
   690                           	callstack 0
   691                           
   692 ;; *************** function _CCP1_Initialize *****************
   693 ;; Defined at:
   694 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/ccp1.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   708 ;;      Params:         0       0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 4
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_SYSTEM_Initialize
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text5
   723   000BC2                     __ptext5:
   724                           	callstack 0
   725   000BC2                     _CCP1_Initialize:
   726                           	callstack 25
   727   000BC2                     
   728                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/ccp1.c: 4:     TRISCbits.
      +                          TRISC2=0;
   729   000BC2  9494               	bcf	148,2,c	;volatile
   730   000BC4                     
   731                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/ccp1.c: 5:     CCP1CON=9;
   732   000BC4  0E09               	movlw	9
   733   000BC6  6EBD               	movwf	189,c	;volatile
   734   000BC8                     
   735                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/ccp1.c: 6:     PIR1bits.C
      +                          CP1IF=0;
   736   000BC8  949E               	bcf	158,2,c	;volatile
   737   000BCA                     
   738                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/ccp1.c: 7:     IPR1bits.C
      +                          CP1IP = 1;
   739   000BCA  849F               	bsf	159,2,c	;volatile
   740   000BCC  0012               	return		;funcret
   741   000BCE                     __end_of_CCP1_Initialize:
   742                           	callstack 0
   743                           
   744 ;; *************** function _ADC_Initialize *****************
   745 ;; Defined at:
   746 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 4
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_SYSTEM_Initialize
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text6
   775   000B80                     __ptext6:
   776                           	callstack 0
   777   000B80                     _ADC_Initialize:
   778                           	callstack 25
   779   000B80                     
   780                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 4:     TRISA = 0xf
      +                          f;
   781   000B80  6892               	setf	146,c	;volatile
   782   000B82                     
   783                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 5:     ADCON1 = 0x
      +                          0e;
   784   000B82  0E0E               	movlw	14
   785   000B84  6EC1               	movwf	193,c	;volatile
   786   000B86                     
   787                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 7:     ADFM = 1 ;
   788   000B86  8EC0               	bsf	4032,7,c	;volatile
   789                           
   790                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 8:     ADCON2bits.
      +                          ADCS = 7;
   791   000B88  0E07               	movlw	7
   792   000B8A  12C0               	iorwf	192,f,c	;volatile
   793                           
   794                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 9:     ADRESH=0;
   795   000B8C  0E00               	movlw	0
   796   000B8E  6EC4               	movwf	196,c	;volatile
   797                           
   798                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/adc.c: 10:     ADRESL=0;
   799   000B90  0E00               	movlw	0
   800   000B92  6EC3               	movwf	195,c	;volatile
   801   000B94  0012               	return		;funcret
   802   000B96                     __end_of_ADC_Initialize:
   803                           	callstack 0
   804                           
   805 ;; *************** function _Mode2 *****************
   806 ;; Defined at:
   807 ;;		line 43 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   821 ;;      Params:         0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0
   823 ;;      Temps:          2       0       0       0       0       0       0
   824 ;;      Totals:         2       0       0       0       0       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; Hardware stack levels required when called: 6
   828 ;; This function calls:
   829 ;;		_ClearBuffer
   830 ;;		_GetString
   831 ;;		_UART_Write_Text
   832 ;;		_strcpy
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text7
   839   000658                     __ptext7:
   840                           	callstack 0
   841   000658                     _Mode2:
   842                           	callstack 24
   843   000658                     
   844                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 45:     UART_Write_Text("[INFO] go 
      +                          to mode2\n\r");
   845   000658  0E42               	movlw	low STR_4
   846   00065A  6E38               	movwf	UART_Write_Text@text^0,c
   847   00065C  0E06               	movlw	high STR_4
   848   00065E  6E39               	movwf	(UART_Write_Text@text+1)^0,c
   849   000660  EC26  F005         	call	_UART_Write_Text	;wreg free
   850   000664                     
   851                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 46:     ClearBuffer();
   852   000664  EC51  F005         	call	_ClearBuffer	;wreg free
   853   000668                     l1240:
   854                           
   855                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 48:     {;C:/Users/Annie/MPLABXProj
      +                          ects/lab10_bonus.X/main.c: 50:         strcpy(str, GetString());
   856   000668  0E17               	movlw	low _str
   857   00066A  6E39               	movwf	strcpy@dest^0,c
   858   00066C  0E00               	movlw	high _str
   859   00066E  6E3A               	movwf	(strcpy@dest+1)^0,c
   860   000670  ECE7  F005         	call	_GetString	;wreg free
   861   000674  C037  F03B         	movff	?_GetString,strcpy@src
   862   000678  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   863   00067C  EC72  F005         	call	_strcpy	;wreg free
   864   000680                     
   865                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 51:         if (str[0] == 'e')
   866   000680  0E65               	movlw	101
   867   000682  1817               	xorwf	_str^0,w,c
   868   000684  A4D8               	btfss	status,2,c
   869   000686  EF47  F003         	goto	u371
   870   00068A  EF49  F003         	goto	u370
   871   00068E                     u371:
   872   00068E  EF53  F003         	goto	l1248
   873   000692                     u370:
   874   000692                     
   875                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 52:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 53:             UART_Write_Text("\n\r[INFO] exit mode2\n\
      +                          r");
   876   000692  0E17               	movlw	low STR_5
   877   000694  6E38               	movwf	UART_Write_Text@text^0,c
   878   000696  0E06               	movlw	high STR_5
   879   000698  6E39               	movwf	(UART_Write_Text@text+1)^0,c
   880   00069A  EC26  F005         	call	_UART_Write_Text	;wreg free
   881   00069E                     l1246:
   882                           
   883                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 54:             LATD = 0;
   884   00069E  0E00               	movlw	0
   885   0006A0  6E8C               	movwf	140,c	;volatile
   886                           
   887                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 55:             break;
   888   0006A2  EFE8  F003         	goto	l36
   889   0006A6                     l1248:
   890                           
   891                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 57:         ClearBuffer();
   892   0006A6  EC51  F005         	call	_ClearBuffer	;wreg free
   893   0006AA                     
   894                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 58:         LATD = 8;
   895   0006AA  0E08               	movlw	8
   896   0006AC  6E8C               	movwf	140,c	;volatile
   897   0006AE                     
   898                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 59:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
   899   0006AE  0E06               	movlw	6
   900   0006B0  6E42               	movwf	(??_Mode2+1)^0,c
   901   0006B2  0E13               	movlw	19
   902   0006B4  6E41               	movwf	??_Mode2^0,c
   903   0006B6  0EAE               	movlw	174
   904   0006B8                     u487:
   905   0006B8  2EE8               	decfsz	wreg,f,c
   906   0006BA  D7FE               	bra	u487
   907   0006BC  2E41               	decfsz	??_Mode2^0,f,c
   908   0006BE  D7FC               	bra	u487
   909   0006C0  2E42               	decfsz	(??_Mode2+1)^0,f,c
   910   0006C2  D7FA               	bra	u487
   911   0006C4                     
   912                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 61:         strcpy(str, GetString()
      +                          );
   913   0006C4  0E17               	movlw	low _str
   914   0006C6  6E39               	movwf	strcpy@dest^0,c
   915   0006C8  0E00               	movlw	high _str
   916   0006CA  6E3A               	movwf	(strcpy@dest+1)^0,c
   917   0006CC  ECE7  F005         	call	_GetString	;wreg free
   918   0006D0  C037  F03B         	movff	?_GetString,strcpy@src
   919   0006D4  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   920   0006D8  EC72  F005         	call	_strcpy	;wreg free
   921   0006DC                     
   922                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 62:         if (str[0] == 'e')
   923   0006DC  0E65               	movlw	101
   924   0006DE  1817               	xorwf	_str^0,w,c
   925   0006E0  A4D8               	btfss	status,2,c
   926   0006E2  EF75  F003         	goto	u381
   927   0006E6  EF77  F003         	goto	u380
   928   0006EA                     u381:
   929   0006EA  EF7F  F003         	goto	l1262
   930   0006EE                     u380:
   931   0006EE                     
   932                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 63:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 64:             UART_Write_Text("\n\r[INFO] exit mode2\n\
      +                          r");
   933   0006EE  0E17               	movlw	low STR_5
   934   0006F0  6E38               	movwf	UART_Write_Text@text^0,c
   935   0006F2  0E06               	movlw	high STR_5
   936   0006F4  6E39               	movwf	(UART_Write_Text@text+1)^0,c
   937   0006F6  EC26  F005         	call	_UART_Write_Text	;wreg free
   938   0006FA  EF4F  F003         	goto	l1246
   939   0006FE                     l1262:
   940                           
   941                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 68:         ClearBuffer();
   942   0006FE  EC51  F005         	call	_ClearBuffer	;wreg free
   943   000702                     
   944                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 69:         LATD = 4;
   945   000702  0E04               	movlw	4
   946   000704  6E8C               	movwf	140,c	;volatile
   947   000706                     
   948                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 70:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
   949   000706  0E06               	movlw	6
   950   000708  6E42               	movwf	(??_Mode2+1)^0,c
   951   00070A  0E13               	movlw	19
   952   00070C  6E41               	movwf	??_Mode2^0,c
   953   00070E  0EAE               	movlw	174
   954   000710                     u497:
   955   000710  2EE8               	decfsz	wreg,f,c
   956   000712  D7FE               	bra	u497
   957   000714  2E41               	decfsz	??_Mode2^0,f,c
   958   000716  D7FC               	bra	u497
   959   000718  2E42               	decfsz	(??_Mode2+1)^0,f,c
   960   00071A  D7FA               	bra	u497
   961   00071C                     
   962                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 72:         strcpy(str, GetString()
      +                          );
   963   00071C  0E17               	movlw	low _str
   964   00071E  6E39               	movwf	strcpy@dest^0,c
   965   000720  0E00               	movlw	high _str
   966   000722  6E3A               	movwf	(strcpy@dest+1)^0,c
   967   000724  ECE7  F005         	call	_GetString	;wreg free
   968   000728  C037  F03B         	movff	?_GetString,strcpy@src
   969   00072C  C038  F03C         	movff	?_GetString+1,strcpy@src+1
   970   000730  EC72  F005         	call	_strcpy	;wreg free
   971   000734                     
   972                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 73:         if (str[0] == 'e')
   973   000734  0E65               	movlw	101
   974   000736  1817               	xorwf	_str^0,w,c
   975   000738  A4D8               	btfss	status,2,c
   976   00073A  EFA1  F003         	goto	u391
   977   00073E  EFA3  F003         	goto	u390
   978   000742                     u391:
   979   000742  EFAB  F003         	goto	l1276
   980   000746                     u390:
   981   000746                     
   982                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 74:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 75:             UART_Write_Text("\n\r[INFO] exit mode2\n\
      +                          r");
   983   000746  0E17               	movlw	low STR_5
   984   000748  6E38               	movwf	UART_Write_Text@text^0,c
   985   00074A  0E06               	movlw	high STR_5
   986   00074C  6E39               	movwf	(UART_Write_Text@text+1)^0,c
   987   00074E  EC26  F005         	call	_UART_Write_Text	;wreg free
   988   000752  EF4F  F003         	goto	l1246
   989   000756                     l1276:
   990                           
   991                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 79:         ClearBuffer();
   992   000756  EC51  F005         	call	_ClearBuffer	;wreg free
   993   00075A                     
   994                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 80:         LATD = 2;
   995   00075A  0E02               	movlw	2
   996   00075C  6E8C               	movwf	140,c	;volatile
   997   00075E                     
   998                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 81:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
   999   00075E  0E06               	movlw	6
  1000   000760  6E42               	movwf	(??_Mode2+1)^0,c
  1001   000762  0E13               	movlw	19
  1002   000764  6E41               	movwf	??_Mode2^0,c
  1003   000766  0EAE               	movlw	174
  1004   000768                     u507:
  1005   000768  2EE8               	decfsz	wreg,f,c
  1006   00076A  D7FE               	bra	u507
  1007   00076C  2E41               	decfsz	??_Mode2^0,f,c
  1008   00076E  D7FC               	bra	u507
  1009   000770  2E42               	decfsz	(??_Mode2+1)^0,f,c
  1010   000772  D7FA               	bra	u507
  1011   000774                     
  1012                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 83:         strcpy(str, GetString()
      +                          );
  1013   000774  0E17               	movlw	low _str
  1014   000776  6E39               	movwf	strcpy@dest^0,c
  1015   000778  0E00               	movlw	high _str
  1016   00077A  6E3A               	movwf	(strcpy@dest+1)^0,c
  1017   00077C  ECE7  F005         	call	_GetString	;wreg free
  1018   000780  C037  F03B         	movff	?_GetString,strcpy@src
  1019   000784  C038  F03C         	movff	?_GetString+1,strcpy@src+1
  1020   000788  EC72  F005         	call	_strcpy	;wreg free
  1021   00078C                     
  1022                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 84:         if (str[0] == 'e')
  1023   00078C  0E65               	movlw	101
  1024   00078E  1817               	xorwf	_str^0,w,c
  1025   000790  A4D8               	btfss	status,2,c
  1026   000792  EFCD  F003         	goto	u401
  1027   000796  EFCF  F003         	goto	u400
  1028   00079A                     u401:
  1029   00079A  EFD7  F003         	goto	l1290
  1030   00079E                     u400:
  1031   00079E                     
  1032                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 85:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 86:             UART_Write_Text("\n\r[INFO] exit mode2\n\
      +                          r");
  1033   00079E  0E17               	movlw	low STR_5
  1034   0007A0  6E38               	movwf	UART_Write_Text@text^0,c
  1035   0007A2  0E06               	movlw	high STR_5
  1036   0007A4  6E39               	movwf	(UART_Write_Text@text+1)^0,c
  1037   0007A6  EC26  F005         	call	_UART_Write_Text	;wreg free
  1038   0007AA  EF4F  F003         	goto	l1246
  1039   0007AE                     l1290:
  1040                           
  1041                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 90:         ClearBuffer();
  1042   0007AE  EC51  F005         	call	_ClearBuffer	;wreg free
  1043   0007B2                     
  1044                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 91:         LATD = 1;
  1045   0007B2  0E01               	movlw	1
  1046   0007B4  6E8C               	movwf	140,c	;volatile
  1047   0007B6                     
  1048                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 92:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
  1049   0007B6  0E06               	movlw	6
  1050   0007B8  6E42               	movwf	(??_Mode2+1)^0,c
  1051   0007BA  0E13               	movlw	19
  1052   0007BC  6E41               	movwf	??_Mode2^0,c
  1053   0007BE  0EAE               	movlw	174
  1054   0007C0                     u517:
  1055   0007C0  2EE8               	decfsz	wreg,f,c
  1056   0007C2  D7FE               	bra	u517
  1057   0007C4  2E41               	decfsz	??_Mode2^0,f,c
  1058   0007C6  D7FC               	bra	u517
  1059   0007C8  2E42               	decfsz	(??_Mode2+1)^0,f,c
  1060   0007CA  D7FA               	bra	u517
  1061   0007CC  EF34  F003         	goto	l1240
  1062   0007D0                     l36:
  1063   0007D0  0012               	return		;funcret
  1064   0007D2                     __end_of_Mode2:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _Mode1 *****************
  1068 ;; Defined at:
  1069 ;;		line 11 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         0       0       0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0
  1085 ;;      Temps:          2       0       0       0       0       0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 6
  1090 ;; This function calls:
  1091 ;;		_ClearBuffer
  1092 ;;		_GetString
  1093 ;;		_UART_Write_Text
  1094 ;;		_strcpy
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text8
  1101   0007D2                     __ptext8:
  1102                           	callstack 0
  1103   0007D2                     _Mode1:
  1104                           	callstack 24
  1105   0007D2                     
  1106                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 13:     UART_Write_Text("[INFO] go 
      +                          to mode1\n\r");
  1107   0007D2  0E2D               	movlw	low STR_1
  1108   0007D4  6E38               	movwf	UART_Write_Text@text^0,c
  1109   0007D6  0E06               	movlw	high STR_1
  1110   0007D8  6E39               	movwf	(UART_Write_Text@text+1)^0,c
  1111   0007DA  EC26  F005         	call	_UART_Write_Text	;wreg free
  1112   0007DE                     
  1113                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 14:     ClearBuffer();
  1114   0007DE  EC51  F005         	call	_ClearBuffer	;wreg free
  1115   0007E2                     l1208:
  1116                           
  1117                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 16:     {;C:/Users/Annie/MPLABXProj
      +                          ects/lab10_bonus.X/main.c: 19:         strcpy(str, GetString());
  1118   0007E2  0E17               	movlw	low _str
  1119   0007E4  6E39               	movwf	strcpy@dest^0,c
  1120   0007E6  0E00               	movlw	high _str
  1121   0007E8  6E3A               	movwf	(strcpy@dest+1)^0,c
  1122   0007EA  ECE7  F005         	call	_GetString	;wreg free
  1123   0007EE  C037  F03B         	movff	?_GetString,strcpy@src
  1124   0007F2  C038  F03C         	movff	?_GetString+1,strcpy@src+1
  1125   0007F6  EC72  F005         	call	_strcpy	;wreg free
  1126   0007FA                     
  1127                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 20:         if (str[0] == 'e')
  1128   0007FA  0E65               	movlw	101
  1129   0007FC  1817               	xorwf	_str^0,w,c
  1130   0007FE  A4D8               	btfss	status,2,c
  1131   000800  EF04  F004         	goto	u351
  1132   000804  EF06  F004         	goto	u350
  1133   000808                     u351:
  1134   000808  EF10  F004         	goto	l1216
  1135   00080C                     u350:
  1136   00080C                     
  1137                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 21:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 22:             UART_Write_Text("\n\r[INFO] exit mode1\n\
      +                          r");
  1138   00080C  0E01               	movlw	low STR_2
  1139   00080E  6E38               	movwf	UART_Write_Text@text^0,c
  1140   000810  0E06               	movlw	high STR_2
  1141   000812  6E39               	movwf	(UART_Write_Text@text+1)^0,c
  1142   000814  EC26  F005         	call	_UART_Write_Text	;wreg free
  1143   000818                     l1214:
  1144                           
  1145                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 23:             LATD = 0;
  1146   000818  0E00               	movlw	0
  1147   00081A  6E8C               	movwf	140,c	;volatile
  1148                           
  1149                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 24:             break;
  1150   00081C  EF4D  F004         	goto	l26
  1151   000820                     l1216:
  1152                           
  1153                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 26:         ClearBuffer();
  1154   000820  EC51  F005         	call	_ClearBuffer	;wreg free
  1155   000824                     
  1156                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 27:         LATD = 5;
  1157   000824  0E05               	movlw	5
  1158   000826  6E8C               	movwf	140,c	;volatile
  1159   000828                     
  1160                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 28:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
  1161   000828  0E06               	movlw	6
  1162   00082A  6E42               	movwf	(??_Mode1+1)^0,c
  1163   00082C  0E13               	movlw	19
  1164   00082E  6E41               	movwf	??_Mode1^0,c
  1165   000830  0EAE               	movlw	174
  1166   000832                     u527:
  1167   000832  2EE8               	decfsz	wreg,f,c
  1168   000834  D7FE               	bra	u527
  1169   000836  2E41               	decfsz	??_Mode1^0,f,c
  1170   000838  D7FC               	bra	u527
  1171   00083A  2E42               	decfsz	(??_Mode1+1)^0,f,c
  1172   00083C  D7FA               	bra	u527
  1173   00083E                     
  1174                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 30:         strcpy(str, GetString()
      +                          );
  1175   00083E  0E17               	movlw	low _str
  1176   000840  6E39               	movwf	strcpy@dest^0,c
  1177   000842  0E00               	movlw	high _str
  1178   000844  6E3A               	movwf	(strcpy@dest+1)^0,c
  1179   000846  ECE7  F005         	call	_GetString	;wreg free
  1180   00084A  C037  F03B         	movff	?_GetString,strcpy@src
  1181   00084E  C038  F03C         	movff	?_GetString+1,strcpy@src+1
  1182   000852  EC72  F005         	call	_strcpy	;wreg free
  1183   000856                     
  1184                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 31:         if (str[0] == 'e')
  1185   000856  0E65               	movlw	101
  1186   000858  1817               	xorwf	_str^0,w,c
  1187   00085A  A4D8               	btfss	status,2,c
  1188   00085C  EF32  F004         	goto	u361
  1189   000860  EF34  F004         	goto	u360
  1190   000864                     u361:
  1191   000864  EF3C  F004         	goto	l1230
  1192   000868                     u360:
  1193   000868                     
  1194                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 32:         {;C:/Users/Annie/MPLABX
      +                          Projects/lab10_bonus.X/main.c: 33:             UART_Write_Text("\n\r[INFO] exit mode1\n\
      +                          r");
  1195   000868  0E01               	movlw	low STR_2
  1196   00086A  6E38               	movwf	UART_Write_Text@text^0,c
  1197   00086C  0E06               	movlw	high STR_2
  1198   00086E  6E39               	movwf	(UART_Write_Text@text+1)^0,c
  1199   000870  EC26  F005         	call	_UART_Write_Text	;wreg free
  1200   000874  EF0C  F004         	goto	l1214
  1201   000878                     l1230:
  1202                           
  1203                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 37:         ClearBuffer();
  1204   000878  EC51  F005         	call	_ClearBuffer	;wreg free
  1205   00087C                     
  1206                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 38:         LATD = 10;
  1207   00087C  0E0A               	movlw	10
  1208   00087E  6E8C               	movwf	140,c	;volatile
  1209   000880                     
  1210                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c: 39:         _delay((unsigned long)(
      +                          (500)*(8000000/4000.0)));
  1211   000880  0E06               	movlw	6
  1212   000882  6E42               	movwf	(??_Mode1+1)^0,c
  1213   000884  0E13               	movlw	19
  1214   000886  6E41               	movwf	??_Mode1^0,c
  1215   000888  0EAE               	movlw	174
  1216   00088A                     u537:
  1217   00088A  2EE8               	decfsz	wreg,f,c
  1218   00088C  D7FE               	bra	u537
  1219   00088E  2E41               	decfsz	??_Mode1^0,f,c
  1220   000890  D7FC               	bra	u537
  1221   000892  2E42               	decfsz	(??_Mode1+1)^0,f,c
  1222   000894  D7FA               	bra	u537
  1223   000896  EFF1  F003         	goto	l1208
  1224   00089A                     l26:
  1225   00089A  0012               	return		;funcret
  1226   00089C                     __end_of_Mode1:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _strcpy *****************
  1230 ;; Defined at:
  1231 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  dest            2   14[COMRAM] PTR unsigned char 
  1234 ;;		 -> str(20), 
  1235 ;;  src             2   16[COMRAM] PTR const unsigned char 
  1236 ;;		 -> mystring(20), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  d               2   20[COMRAM] PTR unsigned char 
  1239 ;;		 -> str(20), 
  1240 ;;  s               2   18[COMRAM] PTR const unsigned char 
  1241 ;;		 -> mystring(20), 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  2   14[COMRAM] PTR unsigned char 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1251 ;;      Params:         4       0       0       0       0       0       0
  1252 ;;      Locals:         4       0       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0
  1254 ;;      Totals:         8       0       0       0       0       0       0
  1255 ;;Total ram usage:        8 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 4
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_Mode1
  1262 ;;		_Mode2
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text9
  1268   000AE4                     __ptext9:
  1269                           	callstack 0
  1270   000AE4                     _strcpy:
  1271                           	callstack 26
  1272   000AE4  C03B  F03D         	movff	strcpy@src,strcpy@s
  1273   000AE8  C03C  F03E         	movff	strcpy@src+1,strcpy@s+1
  1274   000AEC  C039  F03F         	movff	strcpy@dest,strcpy@d
  1275   000AF0  C03A  F040         	movff	strcpy@dest+1,strcpy@d+1
  1276   000AF4                     l1162:
  1277   000AF4  C03D  FFD9         	movff	strcpy@s,fsr2l
  1278   000AF8  C03E  FFDA         	movff	strcpy@s+1,fsr2h
  1279   000AFC  4A3D               	infsnz	strcpy@s^0,f,c
  1280   000AFE  2A3E               	incf	(strcpy@s+1)^0,f,c
  1281   000B00  C03F  FFE1         	movff	strcpy@d,fsr1l
  1282   000B04  C040  FFE2         	movff	strcpy@d+1,fsr1h
  1283   000B08  4A3F               	infsnz	strcpy@d^0,f,c
  1284   000B0A  2A40               	incf	(strcpy@d+1)^0,f,c
  1285   000B0C  CFDF FFE7          	movff	indf2,indf1
  1286   000B10  50E7               	movf	indf1,w,c
  1287   000B12  A4D8               	btfss	status,2,c
  1288   000B14  EF8E  F005         	goto	u271
  1289   000B18  EF90  F005         	goto	u270
  1290   000B1C                     u271:
  1291   000B1C  EF7A  F005         	goto	l1162
  1292   000B20                     u270:
  1293   000B20  0012               	return		;funcret
  1294   000B22                     __end_of_strcpy:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _UART_Write_Text *****************
  1298 ;; Defined at:
  1299 ;;		line 52 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  text            2   13[COMRAM] PTR unsigned char 
  1302 ;;		 -> STR_8(22), STR_7(22), STR_6(22), STR_5(22), 
  1303 ;;		 -> STR_4(21), STR_3(22), STR_2(22), STR_1(21), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  i               2   17[COMRAM] int 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1315 ;;      Params:         2       0       0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0
  1317 ;;      Temps:          2       0       0       0       0       0       0
  1318 ;;      Totals:         6       0       0       0       0       0       0
  1319 ;;Total ram usage:        6 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 5
  1322 ;; This function calls:
  1323 ;;		_UART_Write
  1324 ;; This function is called by:
  1325 ;;		_Mode1
  1326 ;;		_Mode2
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text10
  1331   000A4C                     __ptext10:
  1332                           	callstack 0
  1333   000A4C                     _UART_Write_Text:
  1334                           	callstack 24
  1335   000A4C                     
  1336                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 52: void UART_Wri
      +                          te_Text(char *text);C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c
      +                          : 53: {;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 54:     fo
      +                          r (int i = 0; text[i] != '\0'; i++)
  1337   000A4C  0E00               	movlw	0
  1338   000A4E  6E3D               	movwf	(UART_Write_Text@i+1)^0,c
  1339   000A50  0E00               	movlw	0
  1340   000A52  6E3C               	movwf	UART_Write_Text@i^0,c
  1341   000A54  EF3C  F005         	goto	l1154
  1342   000A58                     l1150:
  1343                           
  1344                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 55:         UART_
      +                          Write(text[i]);
  1345   000A58  503C               	movf	UART_Write_Text@i^0,w,c
  1346   000A5A  2438               	addwf	UART_Write_Text@text^0,w,c
  1347   000A5C  6E3A               	movwf	??_UART_Write_Text^0,c
  1348   000A5E  503D               	movf	(UART_Write_Text@i+1)^0,w,c
  1349   000A60  2039               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1350   000A62  6E3B               	movwf	(??_UART_Write_Text+1)^0,c
  1351   000A64  C03A  FFF6         	movff	??_UART_Write_Text,tblptrl
  1352   000A68  C03B  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1353   000A6C                     	if	0	;tblptru may be non-zero
  1354   000A6C                     	endif
  1355   000A6C                     	if	0	;tblptru may be non-zero
  1356   000A6C                     	endif
  1357   000A6C  0008               	tblrd		*
  1358   000A6E  50F5               	movf	tablat,w,c
  1359   000A70  ECCB  F005         	call	_UART_Write
  1360   000A74  4A3C               	infsnz	UART_Write_Text@i^0,f,c
  1361   000A76  2A3D               	incf	(UART_Write_Text@i+1)^0,f,c
  1362   000A78                     l1154:
  1363   000A78  503C               	movf	UART_Write_Text@i^0,w,c
  1364   000A7A  2438               	addwf	UART_Write_Text@text^0,w,c
  1365   000A7C  6E3A               	movwf	??_UART_Write_Text^0,c
  1366   000A7E  503D               	movf	(UART_Write_Text@i+1)^0,w,c
  1367   000A80  2039               	addwfc	(UART_Write_Text@text+1)^0,w,c
  1368   000A82  6E3B               	movwf	(??_UART_Write_Text+1)^0,c
  1369   000A84  C03A  FFF6         	movff	??_UART_Write_Text,tblptrl
  1370   000A88  C03B  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  1371   000A8C                     	if	0	;tblptru may be non-zero
  1372   000A8C                     	endif
  1373   000A8C                     	if	0	;tblptru may be non-zero
  1374   000A8C                     	endif
  1375   000A8C  0008               	tblrd		*
  1376   000A8E  50F5               	movf	tablat,w,c
  1377   000A90  0900               	iorlw	0
  1378   000A92  A4D8               	btfss	status,2,c
  1379   000A94  EF4E  F005         	goto	u261
  1380   000A98  EF50  F005         	goto	u260
  1381   000A9C                     u261:
  1382   000A9C  EF2C  F005         	goto	l1150
  1383   000AA0                     u260:
  1384   000AA0  0012               	return		;funcret
  1385   000AA2                     __end_of_UART_Write_Text:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _UART_Write *****************
  1389 ;; Defined at:
  1390 ;;		line 45 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  data            1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  data            1   12[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0
  1407 ;;      Totals:         1       0       0       0       0       0       0
  1408 ;;Total ram usage:        1 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 4
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;;		_UART_Write_Text
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text11
  1420   000B96                     __ptext11:
  1421                           	callstack 0
  1422   000B96                     _UART_Write:
  1423                           	callstack 26
  1424                           
  1425                           ;incstack = 0
  1426                           ;UART_Write@data stored from wreg
  1427   000B96  6E37               	movwf	UART_Write@data^0,c
  1428   000B98                     l155:
  1429                           
  1430                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 47:     while (!T
      +                          XSTAbits.TRMT)
  1431   000B98  A2AC               	btfss	172,1,c	;volatile
  1432   000B9A  EFD1  F005         	goto	u11
  1433   000B9E  EFD3  F005         	goto	u10
  1434   000BA2                     u11:
  1435   000BA2  EFCC  F005         	goto	l155
  1436   000BA6                     u10:
  1437   000BA6                     
  1438                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 49:     TXREG = d
      +                          ata;
  1439   000BA6  C037  FFAD         	movff	UART_Write@data,4013	;volatile
  1440   000BAA  0012               	return		;funcret
  1441   000BAC                     __end_of_UART_Write:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _GetString *****************
  1445 ;; Defined at:
  1446 ;;		line 84 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  2   12[COMRAM] PTR unsigned char 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         2       0       0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 4
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_Mode1
  1471 ;;		_Mode2
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text12
  1477   000BCE                     __ptext12:
  1478                           	callstack 0
  1479   000BCE                     _GetString:
  1480                           	callstack 25
  1481   000BCE                     
  1482                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 87:     return my
      +                          string;
  1483   000BCE  0E03               	movlw	low _mystring
  1484   000BD0  6E37               	movwf	?_GetString^0,c
  1485   000BD2  0E00               	movlw	high _mystring
  1486   000BD4  6E38               	movwf	(?_GetString+1)^0,c
  1487   000BD6  0012               	return		;funcret
  1488   000BD8                     __end_of_GetString:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _ClearBuffer *****************
  1492 ;; Defined at:
  1493 ;;		line 58 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  i               2   12[COMRAM] int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1507 ;;      Params:         0       0       0       0       0       0       0
  1508 ;;      Locals:         2       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0
  1510 ;;      Totals:         2       0       0       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 4
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_Mode1
  1518 ;;		_Mode2
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text13
  1524   000AA2                     __ptext13:
  1525                           	callstack 0
  1526   000AA2                     _ClearBuffer:
  1527                           	callstack 25
  1528   000AA2                     
  1529                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 60:     for (int 
      +                          i = 0; i < 10; i++)
  1530   000AA2  0E00               	movlw	0
  1531   000AA4  6E38               	movwf	(ClearBuffer@i+1)^0,c
  1532   000AA6  0E00               	movlw	0
  1533   000AA8  6E37               	movwf	ClearBuffer@i^0,c
  1534   000AAA                     l884:
  1535                           
  1536                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 61:         mystr
      +                          ing[i] = '\0';
  1537   000AAA  0E03               	movlw	low _mystring
  1538   000AAC  2437               	addwf	ClearBuffer@i^0,w,c
  1539   000AAE  6ED9               	movwf	fsr2l,c
  1540   000AB0  0E00               	movlw	high _mystring
  1541   000AB2  2038               	addwfc	(ClearBuffer@i+1)^0,w,c
  1542   000AB4  6EDA               	movwf	fsr2h,c
  1543   000AB6  0E00               	movlw	0
  1544   000AB8  6EDF               	movwf	indf2,c
  1545   000ABA  4A37               	infsnz	ClearBuffer@i^0,f,c
  1546   000ABC  2A38               	incf	(ClearBuffer@i+1)^0,f,c
  1547   000ABE  BE38               	btfsc	(ClearBuffer@i+1)^0,7,c
  1548   000AC0  EF6B  F005         	goto	u31
  1549   000AC4  5038               	movf	(ClearBuffer@i+1)^0,w,c
  1550   000AC6  E109               	bnz	u30
  1551   000AC8  0E0A               	movlw	10
  1552   000ACA  5C37               	subwf	ClearBuffer@i^0,w,c
  1553   000ACC  A0D8               	btfss	status,0,c
  1554   000ACE  EF6B  F005         	goto	u31
  1555   000AD2  EF6D  F005         	goto	u30
  1556   000AD6                     u31:
  1557   000AD6  EF55  F005         	goto	l884
  1558   000ADA                     u30:
  1559   000ADA                     
  1560                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 62:     lenStr = 
      +                          0;
  1561   000ADA  0E00               	movlw	0
  1562   000ADC  6E02               	movwf	(_lenStr+1)^0,c
  1563   000ADE  0E00               	movlw	0
  1564   000AE0  6E01               	movwf	_lenStr^0,c
  1565   000AE2  0012               	return		;funcret
  1566   000AE4                     __end_of_ClearBuffer:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _Lo_ISR *****************
  1570 ;; Defined at:
  1571 ;;		line 90 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1585 ;;      Params:         0       0       0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0
  1587 ;;      Temps:          5       0       0       0       0       0       0
  1588 ;;      Totals:         5       0       0       0       0       0       0
  1589 ;;Total ram usage:        5 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 3
  1592 ;; This function calls:
  1593 ;;		_MyusartRead
  1594 ;; This function is called by:
  1595 ;;		Interrupt level 1
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	intcodelo
  1600   000018                     __pintcodelo:
  1601                           	callstack 0
  1602   000018                     _Lo_ISR:
  1603                           	callstack 24
  1604                           
  1605                           ;incstack = 0
  1606   000018  8043               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1607   00001A  CFD8 F032          	movff	status,??_Lo_ISR
  1608   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
  1609   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
  1610   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
  1611   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
  1612   00002E                     
  1613                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 92:     if (RCIF)
  1614   00002E  AA9E               	btfss	3998,5,c	;volatile
  1615   000030  EF1C  F000         	goto	i1u46_21
  1616   000034  EF1E  F000         	goto	i1u46_20
  1617   000038                     i1u46_21:
  1618   000038  EF2A  F000         	goto	i1l184
  1619   00003C                     i1u46_20:
  1620   00003C                     
  1621                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 93:     {;C:/User
      +                          s/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 94:         if (RCSTAbits
      +                          .OERR)
  1622   00003C  A2AB               	btfss	171,1,c	;volatile
  1623   00003E  EF23  F000         	goto	i1u47_21
  1624   000042  EF25  F000         	goto	i1u47_20
  1625   000046                     i1u47_21:
  1626   000046  EF28  F000         	goto	i1l1342
  1627   00004A                     i1u47_20:
  1628   00004A                     
  1629                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 95:         {;C:/
      +                          Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 96:             CREN 
      +                          = 0;
  1630   00004A  98AB               	bcf	4011,4,c	;volatile
  1631                           
  1632                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 97:             _
      +                          _nop();
  1633   00004C  F000               	nop	
  1634                           
  1635                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 98:             C
      +                          REN = 1;
  1636   00004E  88AB               	bsf	4011,4,c	;volatile
  1637   000050                     i1l1342:
  1638                           
  1639                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 101:         Myus
      +                          artRead();
  1640   000050  ECF0  F004         	call	_MyusartRead	;wreg free
  1641   000054                     i1l184:
  1642   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1643   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1644   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
  1645   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
  1646   000064  C032  FFD8         	movff	??_Lo_ISR,status
  1647   000068  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1648   00006A  0010               	retfie	
  1649   00006C                     __end_of_Lo_ISR:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _MyusartRead *****************
  1653 ;; Defined at:
  1654 ;;		line 65 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1668 ;;      Params:         0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0
  1670 ;;      Temps:          1       0       0       0       0       0       0
  1671 ;;      Totals:         1       0       0       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 2
  1675 ;; This function calls:
  1676 ;;		___awmod
  1677 ;;		i1_UART_Write
  1678 ;; This function is called by:
  1679 ;;		_Lo_ISR
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text15
  1684   0009E0                     __ptext15:
  1685                           	callstack 0
  1686   0009E0                     _MyusartRead:
  1687                           	callstack 24
  1688   0009E0                     
  1689                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 68:     mystring[
      +                          lenStr] = RCREG;
  1690   0009E0  0E03               	movlw	low _mystring
  1691   0009E2  2401               	addwf	_lenStr^0,w,c
  1692   0009E4  6ED9               	movwf	fsr2l,c
  1693   0009E6  0E00               	movlw	high _mystring
  1694   0009E8  2002               	addwfc	(_lenStr+1)^0,w,c
  1695   0009EA  6EDA               	movwf	fsr2h,c
  1696   0009EC  CFAE FFDF          	movff	4014,indf2	;volatile
  1697   0009F0                     
  1698                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 69:     UART_Writ
      +                          e(mystring[lenStr]);
  1699   0009F0  0E03               	movlw	low _mystring
  1700   0009F2  2401               	addwf	_lenStr^0,w,c
  1701   0009F4  6ED9               	movwf	fsr2l,c
  1702   0009F6  0E00               	movlw	high _mystring
  1703   0009F8  2002               	addwfc	(_lenStr+1)^0,w,c
  1704   0009FA  6EDA               	movwf	fsr2h,c
  1705   0009FC  50DF               	movf	indf2,w,c
  1706   0009FE  ECD6  F005         	call	i1_UART_Write
  1707   000A02                     
  1708                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 70:     if (mystr
      +                          ing[lenStr] == '\r')
  1709   000A02  0E03               	movlw	low _mystring
  1710   000A04  2401               	addwf	_lenStr^0,w,c
  1711   000A06  6ED9               	movwf	fsr2l,c
  1712   000A08  0E00               	movlw	high _mystring
  1713   000A0A  2002               	addwfc	(_lenStr+1)^0,w,c
  1714   000A0C  6EDA               	movwf	fsr2h,c
  1715   000A0E  0E0D               	movlw	13
  1716   000A10  18DE               	xorwf	postinc2,w,c
  1717   000A12  A4D8               	btfss	status,2,c
  1718   000A14  EF0E  F005         	goto	i1u41_21
  1719   000A18  EF10  F005         	goto	i1u41_20
  1720   000A1C                     i1u41_21:
  1721   000A1C  EF15  F005         	goto	i1l1304
  1722   000A20                     i1u41_20:
  1723   000A20                     
  1724                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 71:     {;C:/User
      +                          s/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 72:         UART_Write('\
      +                          n');
  1725   000A20  0E0A               	movlw	10
  1726   000A22  ECD6  F005         	call	i1_UART_Write
  1727                           
  1728                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 74:     }
  1729   000A26  EF25  F005         	goto	i1l174
  1730   000A2A                     i1l1304:
  1731                           
  1732                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 76:     {;C:/User
      +                          s/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 77:         lenStr++;
  1733   000A2A  4A01               	infsnz	_lenStr^0,f,c
  1734   000A2C  2A02               	incf	(_lenStr+1)^0,f,c
  1735   000A2E                     
  1736                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 78:         lenSt
      +                          r %= 10;
  1737   000A2E  C001  F02B         	movff	_lenStr,___awmod@dividend
  1738   000A32  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
  1739   000A36  0E00               	movlw	0
  1740   000A38  6E2E               	movwf	(___awmod@divisor+1)^0,c
  1741   000A3A  0E0A               	movlw	10
  1742   000A3C  6E2D               	movwf	___awmod@divisor^0,c
  1743   000A3E  EC4E  F004         	call	___awmod	;wreg free
  1744   000A42  C02B  F001         	movff	?___awmod,_lenStr
  1745   000A46  C02C  F002         	movff	?___awmod+1,_lenStr+1
  1746   000A4A                     i1l174:
  1747   000A4A  0012               	return		;funcret
  1748   000A4C                     __end_of_MyusartRead:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function i1_UART_Write *****************
  1752 ;; Defined at:
  1753 ;;		line 45 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  data            1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  data            1    0[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1767 ;;      Params:         0       0       0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0
  1770 ;;      Totals:         1       0       0       0       0       0       0
  1771 ;;Total ram usage:        1 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_MyusartRead
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text16
  1782   000BAC                     __ptext16:
  1783                           	callstack 0
  1784   000BAC                     i1_UART_Write:
  1785                           	callstack 24
  1786                           
  1787                           ;incstack = 0
  1788                           ;i1UART_Write@data stored from wreg
  1789   000BAC  6E2B               	movwf	i1UART_Write@data^0,c
  1790   000BAE                     i1l155:
  1791                           
  1792                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 47:     while (!T
      +                          XSTAbits.TRMT)
  1793   000BAE  A2AC               	btfss	172,1,c	;volatile
  1794   000BB0  EFDC  F005         	goto	i1u34_21
  1795   000BB4  EFDE  F005         	goto	i1u34_20
  1796   000BB8                     i1u34_21:
  1797   000BB8  EFD7  F005         	goto	i1l155
  1798   000BBC                     i1u34_20:
  1799   000BBC                     
  1800                           ;C:/Users/Annie/MPLABXProjects/lab10_bonus.X/setting_hardaware/uart.c: 49:     TXREG = d
      +                          ata;
  1801   000BBC  C02B  FFAD         	movff	i1UART_Write@data,4013	;volatile
  1802   000BC0  0012               	return		;funcret
  1803   000BC2                     __end_ofi1_UART_Write:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function ___awmod *****************
  1807 ;; Defined at:
  1808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  dividend        2    0[COMRAM] int 
  1811 ;;  divisor         2    2[COMRAM] int 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  sign            1    5[COMRAM] unsigned char 
  1814 ;;  counter         1    4[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2    0[COMRAM] int 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         4       0       0       0       0       0       0
  1825 ;;      Locals:         2       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0
  1827 ;;      Totals:         6       0       0       0       0       0       0
  1828 ;;Total ram usage:        6 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_MyusartRead
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text17
  1839   00089C                     __ptext17:
  1840                           	callstack 0
  1841   00089C                     ___awmod:
  1842                           	callstack 24
  1843   00089C  0E00               	movlw	0
  1844   00089E  6E30               	movwf	___awmod@sign^0,c
  1845   0008A0  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
  1846   0008A2  EF57  F004         	goto	i1u28_20
  1847   0008A6  EF55  F004         	goto	i1u28_21
  1848   0008AA                     i1u28_21:
  1849   0008AA  EF5D  F004         	goto	i1l1172
  1850   0008AE                     i1u28_20:
  1851   0008AE  6C2B               	negf	___awmod@dividend^0,c
  1852   0008B0  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1853   0008B2  B0D8               	btfsc	status,0,c
  1854   0008B4  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1855   0008B6  0E01               	movlw	1
  1856   0008B8  6E30               	movwf	___awmod@sign^0,c
  1857   0008BA                     i1l1172:
  1858   0008BA  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
  1859   0008BC  EF64  F004         	goto	i1u29_20
  1860   0008C0  EF62  F004         	goto	i1u29_21
  1861   0008C4                     i1u29_21:
  1862   0008C4  EF68  F004         	goto	i1l1176
  1863   0008C8                     i1u29_20:
  1864   0008C8  6C2D               	negf	___awmod@divisor^0,c
  1865   0008CA  1E2E               	comf	(___awmod@divisor+1)^0,f,c
  1866   0008CC  B0D8               	btfsc	status,0,c
  1867   0008CE  2A2E               	incf	(___awmod@divisor+1)^0,f,c
  1868   0008D0                     i1l1176:
  1869   0008D0  502D               	movf	___awmod@divisor^0,w,c
  1870   0008D2  102E               	iorwf	(___awmod@divisor+1)^0,w,c
  1871   0008D4  B4D8               	btfsc	status,2,c
  1872   0008D6  EF6F  F004         	goto	i1u30_21
  1873   0008DA  EF71  F004         	goto	i1u30_20
  1874   0008DE                     i1u30_21:
  1875   0008DE  EF95  F004         	goto	i1l1192
  1876   0008E2                     i1u30_20:
  1877   0008E2  0E01               	movlw	1
  1878   0008E4  6E2F               	movwf	___awmod@counter^0,c
  1879   0008E6  EF79  F004         	goto	i1l1182
  1880   0008EA                     i1l1180:
  1881   0008EA  90D8               	bcf	status,0,c
  1882   0008EC  362D               	rlcf	___awmod@divisor^0,f,c
  1883   0008EE  362E               	rlcf	(___awmod@divisor+1)^0,f,c
  1884   0008F0  2A2F               	incf	___awmod@counter^0,f,c
  1885   0008F2                     i1l1182:
  1886   0008F2  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
  1887   0008F4  EF7E  F004         	goto	i1u31_21
  1888   0008F8  EF80  F004         	goto	i1u31_20
  1889   0008FC                     i1u31_21:
  1890   0008FC  EF75  F004         	goto	i1l1180
  1891   000900                     i1u31_20:
  1892   000900                     i1l1184:
  1893   000900  502D               	movf	___awmod@divisor^0,w,c
  1894   000902  5C2B               	subwf	___awmod@dividend^0,w,c
  1895   000904  502E               	movf	(___awmod@divisor+1)^0,w,c
  1896   000906  582C               	subwfb	(___awmod@dividend+1)^0,w,c
  1897   000908  A0D8               	btfss	status,0,c
  1898   00090A  EF89  F004         	goto	i1u32_21
  1899   00090E  EF8B  F004         	goto	i1u32_20
  1900   000912                     i1u32_21:
  1901   000912  EF8F  F004         	goto	i1l1188
  1902   000916                     i1u32_20:
  1903   000916  502D               	movf	___awmod@divisor^0,w,c
  1904   000918  5E2B               	subwf	___awmod@dividend^0,f,c
  1905   00091A  502E               	movf	(___awmod@divisor+1)^0,w,c
  1906   00091C  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
  1907   00091E                     i1l1188:
  1908   00091E  90D8               	bcf	status,0,c
  1909   000920  322E               	rrcf	(___awmod@divisor+1)^0,f,c
  1910   000922  322D               	rrcf	___awmod@divisor^0,f,c
  1911   000924  2E2F               	decfsz	___awmod@counter^0,f,c
  1912   000926  EF80  F004         	goto	i1l1184
  1913   00092A                     i1l1192:
  1914   00092A  5030               	movf	___awmod@sign^0,w,c
  1915   00092C  B4D8               	btfsc	status,2,c
  1916   00092E  EF9B  F004         	goto	i1u33_21
  1917   000932  EF9D  F004         	goto	i1u33_20
  1918   000936                     i1u33_21:
  1919   000936  EFA1  F004         	goto	i1l1196
  1920   00093A                     i1u33_20:
  1921   00093A  6C2B               	negf	___awmod@dividend^0,c
  1922   00093C  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1923   00093E  B0D8               	btfsc	status,0,c
  1924   000940  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1925   000942                     i1l1196:
  1926   000942  C02B  F02B         	movff	___awmod@dividend,?___awmod
  1927   000946  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
  1928   00094A  0012               	return		;funcret
  1929   00094C                     __end_of___awmod:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _Hi_ISR *****************
  1933 ;; Defined at:
  1934 ;;		line 124 in file "C:/Users/Annie/MPLABXProjects/lab10_bonus.X/main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		None
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1948 ;;      Params:         0       0       0       0       0       0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0
  1951 ;;      Totals:         0       0       0       0       0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		Interrupt level 2
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	intcode
  1962   000008                     __pintcode:
  1963                           	callstack 0
  1964   000008                     _Hi_ISR:
  1965                           	callstack 24
  1966                           
  1967                           ;incstack = 0
  1968   000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1969   00000A  EDF4  F005         	call	int_func,f	;refresh shadow registers
  1970                           
  1971                           	psect	intcode_body
  1972   000BE8                     __pintcode_body:
  1973                           	callstack 24
  1974   000BE8                     int_func:
  1975                           	callstack 24
  1976   000BE8  0006               	pop		; remove dummy address from shadow register refresh
  1977   000BEA  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1978   000BEC  0011               	retfie		f
  1979   000BEE                     __end_of_Hi_ISR:
  1980                           	callstack 0
  1981                           
  1982                           	psect	rparam
  1983   000000                     
  1984                           	psect	temp
  1985   000043                     btemp:
  1986                           	callstack 0
  1987   000043                     	ds	1
  1988   000000                     int$flags	set	btemp
  1989   000000                     wtemp8	set	btemp+1
  1990   000000                     ttemp5	set	btemp+1
  1991   000000                     ttemp6	set	btemp+4
  1992   000000                     ttemp7	set	btemp+8
  1993                           
  1994                           	psect	idloc
  1995                           
  1996                           ;Config register IDLOC0 @ 0x200000
  1997                           ;	unspecified, using default values
  1998   200000                     	org	2097152
  1999   200000  FF                 	db	255
  2000                           
  2001                           ;Config register IDLOC1 @ 0x200001
  2002                           ;	unspecified, using default values
  2003   200001                     	org	2097153
  2004   200001  FF                 	db	255
  2005                           
  2006                           ;Config register IDLOC2 @ 0x200002
  2007                           ;	unspecified, using default values
  2008   200002                     	org	2097154
  2009   200002  FF                 	db	255
  2010                           
  2011                           ;Config register IDLOC3 @ 0x200003
  2012                           ;	unspecified, using default values
  2013   200003                     	org	2097155
  2014   200003  FF                 	db	255
  2015                           
  2016                           ;Config register IDLOC4 @ 0x200004
  2017                           ;	unspecified, using default values
  2018   200004                     	org	2097156
  2019   200004  FF                 	db	255
  2020                           
  2021                           ;Config register IDLOC5 @ 0x200005
  2022                           ;	unspecified, using default values
  2023   200005                     	org	2097157
  2024   200005  FF                 	db	255
  2025                           
  2026                           ;Config register IDLOC6 @ 0x200006
  2027                           ;	unspecified, using default values
  2028   200006                     	org	2097158
  2029   200006  FF                 	db	255
  2030                           
  2031                           ;Config register IDLOC7 @ 0x200007
  2032                           ;	unspecified, using default values
  2033   200007                     	org	2097159
  2034   200007  FF                 	db	255
  2035                           
  2036                           	psect	config
  2037                           
  2038                           ; Padding undefined space
  2039   300000                     	org	3145728
  2040   300000  FF                 	db	255
  2041                           
  2042                           ;Config register CONFIG1H @ 0x300001
  2043                           ;	Oscillator Selection bits
  2044                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2045                           ;	Fail-Safe Clock Monitor Enable bit
  2046                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2047                           ;	Internal/External Oscillator Switchover bit
  2048                           ;	IESO = ON, Oscillator Switchover mode enabled
  2049   300001                     	org	3145729
  2050   300001  88                 	db	136
  2051                           
  2052                           ;Config register CONFIG2L @ 0x300002
  2053                           ;	Power-up Timer Enable bit
  2054                           ;	PWRT = OFF, PWRT disabled
  2055                           ;	Brown-out Reset Enable bits
  2056                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2057                           ;	Brown Out Reset Voltage bits
  2058                           ;	BORV = 3, Minimum setting
  2059   300002                     	org	3145730
  2060   300002  1F                 	db	31
  2061                           
  2062                           ;Config register CONFIG2H @ 0x300003
  2063                           ;	Watchdog Timer Enable bit
  2064                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2065                           ;	Watchdog Timer Postscale Select bits
  2066                           ;	WDTPS = 1, 1:1
  2067   300003                     	org	3145731
  2068   300003  00                 	db	0
  2069                           
  2070                           ; Padding undefined space
  2071   300004                     	org	3145732
  2072   300004  FF                 	db	255
  2073                           
  2074                           ;Config register CONFIG3H @ 0x300005
  2075                           ;	CCP2 MUX bit
  2076                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2077                           ;	PORTB A/D Enable bit
  2078                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2079                           ;	Low-Power Timer1 Oscillator Enable bit
  2080                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2081                           ;	MCLR Pin Enable bit
  2082                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2083   300005                     	org	3145733
  2084   300005  83                 	db	131
  2085                           
  2086                           ;Config register CONFIG4L @ 0x300006
  2087                           ;	Stack Full/Underflow Reset Enable bit
  2088                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2089                           ;	Single-Supply ICSP Enable bit
  2090                           ;	LVP = OFF, Single-Supply ICSP disabled
  2091                           ;	Extended Instruction Set Enable bit
  2092                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2093                           ;	Background Debugger Enable bit
  2094                           ;	DEBUG = 0x1, unprogrammed default
  2095   300006                     	org	3145734
  2096   300006  81                 	db	129
  2097                           
  2098                           ; Padding undefined space
  2099   300007                     	org	3145735
  2100   300007  FF                 	db	255
  2101                           
  2102                           ;Config register CONFIG5L @ 0x300008
  2103                           ;	Code Protection bit
  2104                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2105                           ;	Code Protection bit
  2106                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2107                           ;	Code Protection bit
  2108                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2109                           ;	Code Protection bit
  2110                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2111   300008                     	org	3145736
  2112   300008  0F                 	db	15
  2113                           
  2114                           ;Config register CONFIG5H @ 0x300009
  2115                           ;	Boot Block Code Protection bit
  2116                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2117                           ;	Data EEPROM Code Protection bit
  2118                           ;	CPD = OFF, Data EEPROM not code-protected
  2119   300009                     	org	3145737
  2120   300009  C0                 	db	192
  2121                           
  2122                           ;Config register CONFIG6L @ 0x30000A
  2123                           ;	Write Protection bit
  2124                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2125                           ;	Write Protection bit
  2126                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2127                           ;	Write Protection bit
  2128                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2129                           ;	Write Protection bit
  2130                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2131   30000A                     	org	3145738
  2132   30000A  0F                 	db	15
  2133                           
  2134                           ;Config register CONFIG6H @ 0x30000B
  2135                           ;	Configuration Register Write Protection bit
  2136                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2137                           ;	Boot Block Write Protection bit
  2138                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2139                           ;	Data EEPROM Write Protection bit
  2140                           ;	WRTD = OFF, Data EEPROM not write-protected
  2141   30000B                     	org	3145739
  2142   30000B  E0                 	db	224
  2143                           
  2144                           ;Config register CONFIG7L @ 0x30000C
  2145                           ;	Table Read Protection bit
  2146                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2147                           ;	Table Read Protection bit
  2148                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2149                           ;	Table Read Protection bit
  2150                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2151                           ;	Table Read Protection bit
  2152                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2153   30000C                     	org	3145740
  2154   30000C  0F                 	db	15
  2155                           
  2156                           ;Config register CONFIG7H @ 0x30000D
  2157                           ;	Boot Block Table Read Protection bit
  2158                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2159   30000D                     	org	3145741
  2160   30000D  40                 	db	64
  2161                           tosu	equ	0xFFF
  2162                           tosh	equ	0xFFE
  2163                           tosl	equ	0xFFD
  2164                           stkptr	equ	0xFFC
  2165                           pclatu	equ	0xFFB
  2166                           pclath	equ	0xFFA
  2167                           pcl	equ	0xFF9
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           prodh	equ	0xFF4
  2173                           prodl	equ	0xFF3
  2174                           indf0	equ	0xFEF
  2175                           postinc0	equ	0xFEE
  2176                           postdec0	equ	0xFED
  2177                           preinc0	equ	0xFEC
  2178                           plusw0	equ	0xFEB
  2179                           fsr0h	equ	0xFEA
  2180                           fsr0l	equ	0xFE9
  2181                           wreg	equ	0xFE8
  2182                           indf1	equ	0xFE7
  2183                           postinc1	equ	0xFE6
  2184                           postdec1	equ	0xFE5
  2185                           preinc1	equ	0xFE4
  2186                           plusw1	equ	0xFE3
  2187                           fsr1h	equ	0xFE2
  2188                           fsr1l	equ	0xFE1
  2189                           bsr	equ	0xFE0
  2190                           indf2	equ	0xFDF
  2191                           postinc2	equ	0xFDE
  2192                           postdec2	equ	0xFDD
  2193                           preinc2	equ	0xFDC
  2194                           plusw2	equ	0xFDB
  2195                           fsr2h	equ	0xFDA
  2196                           fsr2l	equ	0xFD9
  2197                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24      66
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 22
		 -> STR_8(CODE[22]), STR_7(CODE[22]), STR_6(CODE[22]), STR_5(CODE[22]), 
		 -> STR_4(CODE[21]), STR_3(CODE[22]), STR_2(CODE[22]), STR_1(CODE[21]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Mode1
    _main->_Mode2
    _Mode2->_strcpy
    _Mode1->_strcpy
    _strcpy->_GetString
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5056
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                  _SYSTEM_Initialize
                         _UART_Write
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                2     2      0    1918
                                             22 COMRAM     2     2      0
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                2     2      0    1918
                                             22 COMRAM     2     2      0
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4    1160
                                             14 COMRAM     8     4      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     713
                                             13 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      45
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Lo_ISR                                               5     5      0     470
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (5) _MyusartRead                                          1     1      0     470
                                              6 COMRAM     1     1      0
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (6) i1_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     _strcpy
       _GetString (ARG)
   _Mode2
     _ClearBuffer
     _GetString
     _UART_Write_Text
     _strcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      42       1       52.4%
BITBIGSFRl           C      0       0      29        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhhh         6      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRhl          5      0       0      28        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhhl         1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      30        0.0%
DATA                 0      0      42      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 20 04:17:38 2022

                           l26 089A                             l36 07D0                             l69 0B94  
                           l93 0BE6                             l86 0BCC                             u10 0BA6  
                           u11 0BA2                             u30 0ADA                             u31 0AD6  
                           bsr 000FE0        __end_of_CCP1_Initialize 0BCE                            l112 0B7E  
                          l115 0BDE                            l152 0B4A                            l155 0B98  
                          l164 0AA0                            l158 0BAA                            l169 0AE2  
                          l177 0BD6                            l900 0B80                            l902 0B82  
                          l910 0BC8                            l904 0B86                            l912 0BCA  
                          l920 0B2A                            l906 0BC2                            l914 0BE0  
                          l930 0B38                            l922 0B2C                            l908 0BC4  
                          l916 0BD8                            l940 0B42                            l932 0B3A  
                          l924 0B2E                            l942 0B44                            l934 0B3C  
                          l926 0B30                            l918 0B22                            l864 0B20  
                          l944 0B46                            l936 0B3E                            l928 0B32  
                          l890 0ADA                            l866 0B98                            l946 0B48  
                          l938 0B40                            l884 0AAA                            l868 0BA6  
                          l886 0ABA                            l878 0AA2                            l888 0ABE  
                          u400 079E                            u401 079A                            u260 0AA0  
                          u420 097E                            u261 0A9C                            u421 097A  
                          u270 0B20                            u350 080C                            u430 0990  
                          u271 0B1C                            u351 0808                            u431 098C  
                          u360 0868                            u440 09B6                            u361 0864  
                          u441 09B2                            u370 0692                            u450 09C8  
                          u507 0768                            u371 068E                            u451 09C4  
                          u380 06EE                            u517 07C0                            u381 06EA  
                          u390 0746                            u527 0832                            u391 0742  
                          u537 088A                            u487 06B8                            u497 0710  
                          _str 0017                   ___awmod@sign 0030                            wreg 000FE8  
                         l1210 07FA                           l1220 0828                           l1212 080C  
                         l1204 07D2                           l1150 0A58                           l1230 0878  
                         l1222 083E                           l1214 0818                           l1206 07DE  
                         l1310 094C                           l1152 0A74                           l1160 0AE4  
                         l1232 087C                           l1224 0856                           l1216 0820  
                         l1208 07E2                           l1240 0668                           l1080 0B6A  
                         l1320 0990                           l1312 0950                           l1154 0A78  
                         l1162 0AF4                           l1234 0880                           l1226 0868  
                         l1218 0824                           l1250 06AA                           l1242 0680  
                         l1082 0B72                           l1330 09C8                           l1322 099C  
                         l1314 0954                           l1156 0BCE                           l1148 0A4C  
                         l1252 06AE                           l1244 0692                           l1236 0658  
                         l1084 0B76                           l1332 09D4                           l1316 096C  
                         l1270 0734                           l1262 06FE                           l1254 06C4  
                         l1246 069E                           l1238 0664                           l1086 0B7A  
                         l1318 097E                           l1326 09A4                           l1280 075E  
                         l1272 0746                           l1264 0702                           l1256 06DC  
                         l1248 06A6                           l1328 09B6                           l1290 07AE  
                         l1282 0774                           l1266 0706                           l1258 06EE  
                         l1292 07B2                           l1284 078C                           l1276 0756  
                         l1268 071C                           l1294 07B6                           l1286 079E  
                         l1278 075A                           _ADFM 007E07                           STR_1 062D  
                         STR_2 0601                           STR_3 0601                           STR_4 0642  
                         STR_5 0617                           STR_6 0617                           STR_7 0617  
                         STR_8 0617                           _CREN 007D5C                           _LATD 000F8C  
                         _RCIF 007CF5                           i2l52 0BEA                           _main 094C  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0043                           start 006C                   ___param_bank 000000  
      __end_of_UART_Write_Text 0AA2               ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 0BE0  
                        ?_main 002B                __end_of___awmod 094C                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                          i1l155 0BAE  
                        i1l158 0BC0                          i1l174 0A4A                          i1l431 094A  
                        i1l184 0054                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISD 000F95                          _TXREG 000FAD  
                        _Mode1 07D2                          _Mode2 0658                    ?_UART_Write 002B  
                  _ClearBuffer 0AA2                          tablat 000FF5                          ttemp5 0044  
                        ttemp6 0047                          ttemp7 004B                          status 000FD8  
                        wtemp8 0044                __initialization 0B4C                   __end_of_main 09E0  
                       ??_main 0043               ?_CCP1_Initialize 002B                  __activetblptr 000001  
                       ?_Mode1 002B                         ?_Mode2 002B                         _ADCON1 000FC1  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         i1l1200 0BAE  
                       i1l1202 0BBC                         i1l1300 0A02                         i1l1302 0A20  
                       i1l1304 0A2A                         i1l1170 08B6                         i1l1306 0A2E  
                       i1l1180 08EA                         i1l1172 08BA                         i1l1164 089C  
                       i1l1340 004A                         i1l1190 0924                         i1l1182 08F2  
                       i1l1174 08C8                         i1l1166 08A0                         i1l1342 0050  
                       i1l1184 0900                         i1l1192 092A                         i1l1176 08D0  
                       i1l1168 08AE                         i1l1336 002E                         i1l1194 093A  
                       i1l1186 0916                         i1l1178 08E2                         i1l1338 003C  
                       i1l1196 0942                         i1l1188 091E                         i1l1296 09E0  
                       i1l1298 09F0                         _Hi_ISR 0008                         _Lo_ISR 0018  
                    ??___awmod 002F               ?_UART_Write_Text 0038                         _lenStr 0001  
                       clear_0 0B52                ___awmod@divisor 002D                         isa$std 000001  
              ___awmod@counter 002F                         _strcpy 0AE4                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
            _SYSTEM_Initialize 0B6A                     __accesstop 0080        __end_of__initialization 0B58  
           ?_SYSTEM_Initialize 002B                  ___rparam_used 000001              __end_of_GetString 0BD8  
                ?i1_UART_Write 002B                  __end_of_Mode1 089C                  __end_of_Mode2 07D2  
               __pcstackCOMRAM 002B            ??_SYSTEM_Initialize 0037                  ??_MyusartRead 0031  
                      ??_Mode1 0041                        ??_Mode2 0041      __end_of_SYSTEM_Initialize 0B80  
                      ?_Hi_ISR 002B                        ?_Lo_ISR 002B                 ??i1_UART_Write 002B  
                      _CCP1CON 000FBD                        ?_strcpy 0039                   ??_UART_Write 0037  
                      i1u30_20 08E2                        i1u30_21 08DE                        i1u31_20 0900  
                      i1u31_21 08FC                        i1u32_20 0916                        i1u32_21 0912  
                      i1u33_20 093A                        i1u41_20 0A20                        i1u33_21 0936  
                      i1u41_21 0A1C                        i1u34_20 0BBC                        i1u34_21 0BB8  
                      i1u28_20 08AE                        i1u28_21 08AA                        i1u29_20 08C8  
                      i1u29_21 08C4                        i1u46_20 003C                        i1u46_21 0038  
                      i1u47_20 004A                        i1u47_21 0046                   ?_ClearBuffer 002B  
          __end_of_MyusartRead 0A4C                        __Hparam 0000                        __Lparam 0000  
                      ___awmod 089C             __end_of_UART_Write 0BAC                   __psmallconst 0600  
                      __pcinit 0B4C                        __ramtop 0600                        __ptext0 094C  
                      __ptext1 0B6A                        __ptext2 0B22                        __ptext3 0BD8  
                      __ptext4 0BE0                        __ptext5 0BC2                        __ptext6 0B80  
                      __ptext7 0658                        __ptext8 07D2                        __ptext9 0AE4  
        _OSCILLATOR_Initialize 0BD8               ___awmod@dividend 002B                 __pintcode_body 0BE8  
         end_of_initialization 0B58                        int_func 0BE8                      _RCSTAbits 000FAB  
                      postinc0 000FEE                        postinc2 000FDE                        strcpy@d 003F  
                      strcpy@s 003D                 UART_Write@data 0037                      _TRISCbits 000F94  
                  _MyusartRead 09E0           __end_ofi1_UART_Write 0BC2                      _TXSTAbits 000FAC  
               __end_of_Hi_ISR 0BEE                 __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 0BE8  
                    _GetString 0BCE                    _BAUDCONbits 000FB8                 _ADC_Initialize 0B80  
       ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 0B22            start_initialization 0B4C  
                 ClearBuffer@i 0037              ??_UART_Initialize 0037                       ??_Hi_ISR 002B  
                     ??_Lo_ISR 0032         __end_of_ADC_Initialize 0B96                     ?_GetString 0037  
                     ??_strcpy 003D                    __pbssCOMRAM 0001              ??_CCP1_Initialize 0037  
                    __pintcode 0008                       ?___awmod 002B                ?_ADC_Initialize 002B  
                  __pintcodelo 0018                    __smallconst 0600              ??_UART_Write_Text 003A  
         _INTERRUPT_Initialize 0BE0                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                   i1_UART_Write 0BAC                       _RCONbits 000FD0  
                  ??_GetString 0039                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
                 ?_MyusartRead 002B          ?_INTERRUPT_Initialize 002B               i1UART_Write@data 002B  
                     __Hrparam 0000                       __Lrparam 0000                   __Lsmallconst 0600  
      ??_OSCILLATOR_Initialize 0037                _UART_Initialize 0B22                       __ptext10 0A4C  
                     __ptext11 0B96                       __ptext12 0BCE                       __ptext13 0AA2  
                     __ptext15 09E0                       __ptext16 0BAC                       __ptext17 089C  
                   strcpy@dest 0039            UART_Write_Text@text 0038                       isa$xinst 000000  
                     int$flags 0043                       _mystring 0003                     _INTCONbits 000FF2  
              _CCP1_Initialize 0BC2         ??_INTERRUPT_Initialize 0037                  ??_ClearBuffer 0037  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 003B  
             ??_ADC_Initialize 0037        __end_of_UART_Initialize 0B4C                _UART_Write_Text 0A4C  
                   _UART_Write 0B96               UART_Write_Text@i 003C            __end_of_ClearBuffer 0AE4  
