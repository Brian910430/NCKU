

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 20 02:05:58 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 04/07/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _RCREG	set	4014
    71   000000                     _TXREG	set	4013
    72   000000                     _PIE1bits	set	3997
    73   000000                     _SPBRG	set	4015
    74   000000                     _BAUDCONbits	set	4024
    75   000000                     _PIR1bits	set	3998
    76   000000                     _CCP1CON	set	4029
    77   000000                     _ADCON0bits	set	4034
    78   000000                     _ADRESL	set	4035
    79   000000                     _ADRESH	set	4036
    80   000000                     _ADCON1	set	4033
    81   000000                     _ADFM	set	32263
    82   000000                     _ADCON2bits	set	4032
    83   000000                     _CREN	set	32092
    84   000000                     _RCIF	set	31989
    85   000000                     _IRCF0	set	32412
    86   000000                     _IRCF1	set	32413
    87   000000                     _LATD	set	3980
    88   000000                     _TRISA	set	3986
    89   000000                     _INTCONbits	set	4082
    90   000000                     _TRISCbits	set	3988
    91   000000                     _RCONbits	set	4048
    92   000000                     _TRISD	set	3989
    93   000000                     _RCSTAbits	set	4011
    94   000000                     _TXSTAbits	set	4012
    95   000000                     _IPR1bits	set	3999
    96   000000                     _IRCF2	set	32414
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   0004E6                     __pcinit:
   102                           	callstack 0
   103   0004E6                     start_initialization:
   104                           	callstack 0
   105   0004E6                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (42 bytes)
   109   0004E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   110   0004EA  0E2A               	movlw	42
   111   0004EC                     clear_0:
   112   0004EC  6AEE               	clrf	postinc0,c
   113   0004EE  06E8               	decf	wreg,f,c
   114   0004F0  E1FD               	bnz	clear_0
   115   0004F2                     end_of_initialization:
   116                           	callstack 0
   117   0004F2                     __end_of__initialization:
   118                           	callstack 0
   119   0004F2  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120   0004F4  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121   0004F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122   0004F8  6EF8               	movwf	tblptru,c
   123   0004FA  0100               	movlb	0
   124   0004FC  EF4C  F002         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127   000001                     __pbssCOMRAM:
   128                           	callstack 0
   129   000001                     _lenStr:
   130                           	callstack 0
   131   000001                     	ds	2
   132   000003                     _mystring:
   133                           	callstack 0
   134   000003                     	ds	20
   135   000017                     _str:
   136                           	callstack 0
   137   000017                     	ds	20
   138                           
   139                           	psect	cstackCOMRAM
   140   00002B                     __pcstackCOMRAM:
   141                           	callstack 0
   142   00002B                     ?_isspace:
   143                           	callstack 0
   144   00002B                     ?_isdigit:
   145                           	callstack 0
   146   00002B                     ?___wmul:
   147                           	callstack 0
   148   00002B                     ?___awmod:
   149                           	callstack 0
   150   00002B                     UART_Write@data:
   151                           	callstack 0
   152   00002B                     ___wmul@multiplier:
   153                           	callstack 0
   154   00002B                     ___awmod@dividend:
   155                           	callstack 0
   156   00002B                     isdigit@c:
   157                           	callstack 0
   158   00002B                     isspace@c:
   159                           	callstack 0
   160   00002B                     i1ClearBuffer@i:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x0
   164   00002B                     	ds	2
   165   00002D                     ??_isspace:
   166   00002D                     ??_isdigit:
   167   00002D                     ___wmul@multiplicand:
   168                           	callstack 0
   169   00002D                     ___awmod@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x2
   173   00002D                     	ds	2
   174   00002F                     ___awmod@counter:
   175                           	callstack 0
   176   00002F                     _isspace$1216:
   177                           	callstack 0
   178   00002F                     ___wmul@product:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x4
   182   00002F                     	ds	1
   183   000030                     ___awmod@sign:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x5
   187   000030                     	ds	1
   188   000031                     ?_atoi:
   189                           	callstack 0
   190   000031                     atoi@s:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x6
   194   000031                     	ds	2
   195   000033                     ??_atoi:
   196                           
   197                           ; 1 bytes @ 0x8
   198   000033                     	ds	3
   199   000036                     atoi@neg:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0xB
   203   000036                     	ds	2
   204   000038                     atoi@n:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0xD
   208   000038                     	ds	2
   209   00003A                     
   210                           ; 1 bytes @ 0xF
   211   00003A                     	ds	1
   212   00003B                     MyusartRead@number:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0x10
   216   00003B                     	ds	2
   217   00003D                     ??_Lo_ISR:
   218                           
   219                           ; 1 bytes @ 0x12
   220   00003D                     	ds	7
   221   000044                     ?_GetString:
   222                           	callstack 0
   223   000044                     ClearBuffer@i:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x19
   227   000044                     	ds	2
   228   000046                     strcpy@dest:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x1B
   232   000046                     	ds	2
   233   000048                     strcpy@src:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x1D
   237   000048                     	ds	2
   238   00004A                     strcpy@s:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x1F
   242   00004A                     	ds	2
   243   00004C                     strcpy@d:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x21
   247   00004C                     	ds	2
   248   00004E                     
   249                           ; 1 bytes @ 0x23
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 10 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels required when called: 7
   275 ;; This function calls:
   276 ;;		_ClearBuffer
   277 ;;		_GetString
   278 ;;		_SYSTEM_Initialize
   279 ;;		_strcpy
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text0
   286   000498                     __ptext0:
   287                           	callstack 0
   288   000498                     _main:
   289                           	callstack 24
   290   000498                     
   291                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/main.c: 12:     SYSTEM_Initialize() ;
   292   000498  EC80  F002         	call	_SYSTEM_Initialize	;wreg free
   293   00049C                     
   294                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/main.c: 13:     ClearBuffer();
   295   00049C  ECC0  F001         	call	_ClearBuffer	;wreg free
   296   0004A0                     l1258:
   297                           
   298                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/main.c: 16:         strcpy(str, GetString
      +                          ());
   299   0004A0  0E17               	movlw	low _str
   300   0004A2  6E46               	movwf	strcpy@dest^0,c
   301   0004A4  0E00               	movlw	high _str
   302   0004A6  6E47               	movwf	(strcpy@dest+1)^0,c
   303   0004A8  ECA7  F002         	call	_GetString	;wreg free
   304   0004AC  C044  F048         	movff	?_GetString,strcpy@src
   305   0004B0  C045  F049         	movff	?_GetString+1,strcpy@src+1
   306   0004B4  EC02  F002         	call	_strcpy	;wreg free
   307   0004B8  EF50  F002         	goto	l1258
   308   0004BC  EF3E  F000         	goto	start
   309   0004C0                     __end_of_main:
   310                           	callstack 0
   311                           
   312 ;; *************** function _strcpy *****************
   313 ;; Defined at:
   314 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  dest            2   27[COMRAM] PTR unsigned char 
   317 ;;		 -> str(20), 
   318 ;;  src             2   29[COMRAM] PTR const unsigned char 
   319 ;;		 -> mystring(20), 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  d               2   33[COMRAM] PTR unsigned char 
   322 ;;		 -> str(20), 
   323 ;;  s               2   31[COMRAM] PTR const unsigned char 
   324 ;;		 -> mystring(20), 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  2   27[COMRAM] PTR unsigned char 
   327 ;; Registers used:
   328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:         4       0       0       0       0       0       0
   335 ;;      Locals:         4       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:         8       0       0       0       0       0       0
   338 ;;Total ram usage:        8 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; Hardware stack levels required when called: 5
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text1
   349   000404                     __ptext1:
   350                           	callstack 0
   351   000404                     _strcpy:
   352                           	callstack 25
   353   000404  C048  F04A         	movff	strcpy@src,strcpy@s
   354   000408  C049  F04B         	movff	strcpy@src+1,strcpy@s+1
   355   00040C  C046  F04C         	movff	strcpy@dest,strcpy@d
   356   000410  C047  F04D         	movff	strcpy@dest+1,strcpy@d+1
   357   000414                     l1226:
   358   000414  C04A  FFD9         	movff	strcpy@s,fsr2l
   359   000418  C04B  FFDA         	movff	strcpy@s+1,fsr2h
   360   00041C  4A4A               	infsnz	strcpy@s^0,f,c
   361   00041E  2A4B               	incf	(strcpy@s+1)^0,f,c
   362   000420  C04C  FFE1         	movff	strcpy@d,fsr1l
   363   000424  C04D  FFE2         	movff	strcpy@d+1,fsr1h
   364   000428  4A4C               	infsnz	strcpy@d^0,f,c
   365   00042A  2A4D               	incf	(strcpy@d+1)^0,f,c
   366   00042C  CFDF FFE7          	movff	indf2,indf1
   367   000430  50E7               	movf	indf1,w,c
   368   000432  A4D8               	btfss	status,2,c
   369   000434  EF1E  F002         	goto	u401
   370   000438  EF20  F002         	goto	u400
   371   00043C                     u401:
   372   00043C  EF0A  F002         	goto	l1226
   373   000440                     u400:
   374   000440  0012               	return		;funcret
   375   000442                     __end_of_strcpy:
   376                           	callstack 0
   377                           
   378 ;; *************** function _SYSTEM_Initialize *****************
   379 ;; Defined at:
   380 ;;		line 60 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   394 ;;      Params:         0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 6
   401 ;; This function calls:
   402 ;;		_ADC_Initialize
   403 ;;		_CCP1_Initialize
   404 ;;		_INTERRUPT_Initialize
   405 ;;		_OSCILLATOR_Initialize
   406 ;;		_UART_Initialize
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413   000500                     __ptext2:
   414                           	callstack 0
   415   000500                     _SYSTEM_Initialize:
   416                           	callstack 24
   417   000500                     
   418                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 63:     OSCI
      +                          LLATOR_Initialize();
   419   000500  ECAC  F002         	call	_OSCILLATOR_Initialize	;wreg free
   420                           
   421                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 67:     INTE
      +                          RRUPT_Initialize();
   422   000504  ECB0  F002         	call	_INTERRUPT_Initialize	;wreg free
   423   000508                     
   424                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 68:     UART
      +                          _Initialize();
   425   000508  EC37  F002         	call	_UART_Initialize	;wreg free
   426   00050C                     
   427                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 69:     CCP1
      +                          _Initialize();
   428   00050C  ECA1  F002         	call	_CCP1_Initialize	;wreg free
   429   000510                     
   430                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 70:     ADC_
      +                          Initialize();
   431   000510  EC8B  F002         	call	_ADC_Initialize	;wreg free
   432   000514  0012               	return		;funcret
   433   000516                     __end_of_SYSTEM_Initialize:
   434                           	callstack 0
   435                           
   436 ;; *************** function _UART_Initialize *****************
   437 ;; Defined at:
   438 ;;		line 11 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         0       0       0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 5
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_SYSTEM_Initialize
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text3
   467   00046E                     __ptext3:
   468                           	callstack 0
   469   00046E                     _UART_Initialize:
   470                           	callstack 24
   471   00046E                     
   472                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 22:     TRISD =
      +                           0;
   473   00046E  0E00               	movlw	0
   474   000470  6E95               	movwf	149,c	;volatile
   475                           
   476                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 23:     LATD = 
      +                          0;
   477   000472  0E00               	movlw	0
   478   000474  6E8C               	movwf	140,c	;volatile
   479   000476                     
   480                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 25:     TRISCbi
      +                          ts.TRISC6 = 1;
   481   000476  8C94               	bsf	148,6,c	;volatile
   482   000478                     
   483                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 26:     TRISCbi
      +                          ts.TRISC7 = 1;
   484   000478  8E94               	bsf	148,7,c	;volatile
   485   00047A                     
   486                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 29:     TXSTAbi
      +                          ts.SYNC = 0;
   487   00047A  98AC               	bcf	172,4,c	;volatile
   488   00047C                     
   489                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 30:     BAUDCON
      +                          bits.BRG16 = 0;
   490   00047C  96B8               	bcf	184,3,c	;volatile
   491   00047E                     
   492                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 31:     TXSTAbi
      +                          ts.BRGH = 0;
   493   00047E  94AC               	bcf	172,2,c	;volatile
   494                           
   495                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 32:     SPBRG =
      +                           51;
   496   000480  0E33               	movlw	51
   497   000482  6EAF               	movwf	175,c	;volatile
   498   000484                     
   499                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 36:     RCSTAbi
      +                          ts.SPEN = 1;
   500   000484  8EAB               	bsf	171,7,c	;volatile
   501   000486                     
   502                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 37:     PIR1bit
      +                          s.TXIF = 1;
   503   000486  889E               	bsf	158,4,c	;volatile
   504   000488                     
   505                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 38:     PIR1bit
      +                          s.RCIF = 0;
   506   000488  9A9E               	bcf	158,5,c	;volatile
   507   00048A                     
   508                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 39:     TXSTAbi
      +                          ts.TXEN = 1;
   509   00048A  8AAC               	bsf	172,5,c	;volatile
   510   00048C                     
   511                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 40:     RCSTAbi
      +                          ts.CREN = 1;
   512   00048C  88AB               	bsf	171,4,c	;volatile
   513   00048E                     
   514                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 41:     PIE1bit
      +                          s.TXIE = 0;
   515   00048E  989D               	bcf	157,4,c	;volatile
   516   000490                     
   517                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 42:     IPR1bit
      +                          s.TXIP = 0;
   518   000490  989F               	bcf	159,4,c	;volatile
   519   000492                     
   520                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 43:     PIE1bit
      +                          s.RCIE = 1;
   521   000492  8A9D               	bsf	157,5,c	;volatile
   522   000494                     
   523                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 44:     IPR1bit
      +                          s.RCIP = 0;
   524   000494  9A9F               	bcf	159,5,c	;volatile
   525   000496  0012               	return		;funcret
   526   000498                     __end_of_UART_Initialize:
   527                           	callstack 0
   528                           
   529 ;; *************** function _OSCILLATOR_Initialize *****************
   530 ;; Defined at:
   531 ;;		line 73 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		None
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   545 ;;      Params:         0       0       0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 5
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_SYSTEM_Initialize
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text4
   560   000558                     __ptext4:
   561                           	callstack 0
   562   000558                     _OSCILLATOR_Initialize:
   563                           	callstack 24
   564   000558                     
   565                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 75:     IRCF
      +                          2 = 1;
   566   000558  8CD3               	bsf	4051,6,c	;volatile
   567                           
   568                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 76:     IRCF
      +                          1 = 1;
   569   00055A  8AD3               	bsf	4051,5,c	;volatile
   570                           
   571                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/setting.c: 77:     IRCF
      +                          0 = 0;
   572   00055C  98D3               	bcf	4051,4,c	;volatile
   573   00055E  0012               	return		;funcret
   574   000560                     __end_of_OSCILLATOR_Initialize:
   575                           	callstack 0
   576                           
   577 ;; *************** function _INTERRUPT_Initialize *****************
   578 ;; Defined at:
   579 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/interrupt_manager.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		None
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         0       0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 5
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_SYSTEM_Initialize
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text5
   608   000560                     __ptext5:
   609                           	callstack 0
   610   000560                     _INTERRUPT_Initialize:
   611                           	callstack 24
   612   000560                     
   613                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/interrupt_manager.c: 5:
      +                               RCONbits.IPEN = 1;
   614   000560  8ED0               	bsf	208,7,c	;volatile
   615                           
   616                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/interrupt_manager.c: 6:
      +                               INTCONbits.GIEH = 1;
   617   000562  8EF2               	bsf	242,7,c	;volatile
   618                           
   619                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/interrupt_manager.c: 7:
      +                               INTCONbits.GIEL = 1;
   620   000564  8CF2               	bsf	242,6,c	;volatile
   621   000566  0012               	return		;funcret
   622   000568                     __end_of_INTERRUPT_Initialize:
   623                           	callstack 0
   624                           
   625 ;; *************** function _CCP1_Initialize *****************
   626 ;; Defined at:
   627 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/ccp1.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 5
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_SYSTEM_Initialize
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text6
   656   000542                     __ptext6:
   657                           	callstack 0
   658   000542                     _CCP1_Initialize:
   659                           	callstack 24
   660   000542                     
   661                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/ccp1.c: 4:     TRISCbit
      +                          s.TRISC2=0;
   662   000542  9494               	bcf	148,2,c	;volatile
   663   000544                     
   664                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/ccp1.c: 5:     CCP1CON=
      +                          9;
   665   000544  0E09               	movlw	9
   666   000546  6EBD               	movwf	189,c	;volatile
   667   000548                     
   668                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/ccp1.c: 6:     PIR1bits
      +                          .CCP1IF=0;
   669   000548  949E               	bcf	158,2,c	;volatile
   670   00054A                     
   671                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/ccp1.c: 7:     IPR1bits
      +                          .CCP1IP = 1;
   672   00054A  849F               	bsf	159,2,c	;volatile
   673   00054C  0012               	return		;funcret
   674   00054E                     __end_of_CCP1_Initialize:
   675                           	callstack 0
   676                           
   677 ;; *************** function _ADC_Initialize *****************
   678 ;; Defined at:
   679 ;;		line 3 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   693 ;;      Params:         0       0       0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 5
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_SYSTEM_Initialize
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text7
   708   000516                     __ptext7:
   709                           	callstack 0
   710   000516                     _ADC_Initialize:
   711                           	callstack 24
   712   000516                     
   713                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 4:     TRISA = 0
      +                          xff;
   714   000516  6892               	setf	146,c	;volatile
   715   000518                     
   716                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 5:     ADCON1 = 
      +                          0x0e;
   717   000518  0E0E               	movlw	14
   718   00051A  6EC1               	movwf	193,c	;volatile
   719   00051C                     
   720                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 7:     ADFM = 1 
      +                          ;
   721   00051C  8EC0               	bsf	4032,7,c	;volatile
   722                           
   723                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 8:     ADCON2bit
      +                          s.ADCS = 7;
   724   00051E  0E07               	movlw	7
   725   000520  12C0               	iorwf	192,f,c	;volatile
   726                           
   727                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 9:     ADRESH=0;
   728   000522  0E00               	movlw	0
   729   000524  6EC4               	movwf	196,c	;volatile
   730                           
   731                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/adc.c: 10:     ADRESL=0
      +                          ;
   732   000526  0E00               	movlw	0
   733   000528  6EC3               	movwf	195,c	;volatile
   734   00052A  0012               	return		;funcret
   735   00052C                     __end_of_ADC_Initialize:
   736                           	callstack 0
   737                           
   738 ;; *************** function _GetString *****************
   739 ;; Defined at:
   740 ;;		line 95 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  2   25[COMRAM] PTR unsigned char 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   754 ;;      Params:         2       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0
   757 ;;      Totals:         2       0       0       0       0       0       0
   758 ;;Total ram usage:        2 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 5
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text8
   769   00054E                     __ptext8:
   770                           	callstack 0
   771   00054E                     _GetString:
   772                           	callstack 25
   773   00054E                     
   774                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 98:     return 
      +                          mystring;
   775   00054E  0E03               	movlw	low _mystring
   776   000550  6E44               	movwf	?_GetString^0,c
   777   000552  0E00               	movlw	high _mystring
   778   000554  6E45               	movwf	(?_GetString+1)^0,c
   779   000556  0012               	return		;funcret
   780   000558                     __end_of_GetString:
   781                           	callstack 0
   782                           
   783 ;; *************** function _ClearBuffer *****************
   784 ;; Defined at:
   785 ;;		line 60 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  i               2   25[COMRAM] int 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   799 ;;      Params:         0       0       0       0       0       0       0
   800 ;;      Locals:         2       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0
   802 ;;      Totals:         2       0       0       0       0       0       0
   803 ;;Total ram usage:        2 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 5
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text9
   814   000380                     __ptext9:
   815                           	callstack 0
   816   000380                     _ClearBuffer:
   817                           	callstack 25
   818   000380                     
   819                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 62:     for (in
      +                          t i = 0; i < 10; i++)
   820   000380  0E00               	movlw	0
   821   000382  6E45               	movwf	(ClearBuffer@i+1)^0,c
   822   000384  0E00               	movlw	0
   823   000386  6E44               	movwf	ClearBuffer@i^0,c
   824   000388                     l1050:
   825                           
   826                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 63:         mys
      +                          tring[i] = '\0';
   827   000388  0E03               	movlw	low _mystring
   828   00038A  2444               	addwf	ClearBuffer@i^0,w,c
   829   00038C  6ED9               	movwf	fsr2l,c
   830   00038E  0E00               	movlw	high _mystring
   831   000390  2045               	addwfc	(ClearBuffer@i+1)^0,w,c
   832   000392  6EDA               	movwf	fsr2h,c
   833   000394  0E00               	movlw	0
   834   000396  6EDF               	movwf	indf2,c
   835   000398  4A44               	infsnz	ClearBuffer@i^0,f,c
   836   00039A  2A45               	incf	(ClearBuffer@i+1)^0,f,c
   837   00039C  BE45               	btfsc	(ClearBuffer@i+1)^0,7,c
   838   00039E  EFDA  F001         	goto	u171
   839   0003A2  5045               	movf	(ClearBuffer@i+1)^0,w,c
   840   0003A4  E109               	bnz	u170
   841   0003A6  0E0A               	movlw	10
   842   0003A8  5C44               	subwf	ClearBuffer@i^0,w,c
   843   0003AA  A0D8               	btfss	status,0,c
   844   0003AC  EFDA  F001         	goto	u171
   845   0003B0  EFDC  F001         	goto	u170
   846   0003B4                     u171:
   847   0003B4  EFC4  F001         	goto	l1050
   848   0003B8                     u170:
   849   0003B8                     
   850                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 64:     lenStr 
      +                          = 0;
   851   0003B8  0E00               	movlw	0
   852   0003BA  6E02               	movwf	(_lenStr+1)^0,c
   853   0003BC  0E00               	movlw	0
   854   0003BE  6E01               	movwf	_lenStr^0,c
   855   0003C0  0012               	return		;funcret
   856   0003C2                     __end_of_ClearBuffer:
   857                           	callstack 0
   858                           
   859 ;; *************** function _Lo_ISR *****************
   860 ;; Defined at:
   861 ;;		line 101 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   875 ;;      Params:         0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0
   877 ;;      Temps:          7       0       0       0       0       0       0
   878 ;;      Totals:         7       0       0       0       0       0       0
   879 ;;Total ram usage:        7 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 4
   882 ;; This function calls:
   883 ;;		_MyusartRead
   884 ;; This function is called by:
   885 ;;		Interrupt level 1
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	intcodelo
   890   000018                     __pintcodelo:
   891                           	callstack 0
   892   000018                     _Lo_ISR:
   893                           	callstack 24
   894                           
   895                           ;incstack = 0
   896   000018  804E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   897   00001A  CFD8 F03D          	movff	status,??_Lo_ISR
   898   00001E  CFE8 F03E          	movff	wreg,??_Lo_ISR+1
   899   000022  CFE0 F03F          	movff	bsr,??_Lo_ISR+2
   900   000026  CFD9 F040          	movff	fsr2l,??_Lo_ISR+3
   901   00002A  CFDA F041          	movff	fsr2h,??_Lo_ISR+4
   902   00002E  CFF3 F042          	movff	prodl,??_Lo_ISR+5
   903   000032  CFF4 F043          	movff	prodh,??_Lo_ISR+6
   904   000036                     
   905                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 103:     if (RC
      +                          IF)
   906   000036  AA9E               	btfss	3998,5,c	;volatile
   907   000038  EF20  F000         	goto	i1u44_21
   908   00003C  EF22  F000         	goto	i1u44_20
   909   000040                     i1u44_21:
   910   000040  EF2E  F000         	goto	i1l159
   911   000044                     i1u44_20:
   912   000044                     
   913                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 104:     {;C:/U
      +                          sers/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 105:         if (RCS
      +                          TAbits.OERR)
   914   000044  A2AB               	btfss	171,1,c	;volatile
   915   000046  EF27  F000         	goto	i1u45_21
   916   00004A  EF29  F000         	goto	i1u45_20
   917   00004E                     i1u45_21:
   918   00004E  EF2C  F000         	goto	i1l1266
   919   000052                     i1u45_20:
   920   000052                     
   921                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 106:         {;
      +                          C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 107:            
      +                           CREN = 0;
   922   000052  98AB               	bcf	4011,4,c	;volatile
   923                           
   924                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 108:           
      +                            __nop();
   925   000054  F000               	nop	
   926                           
   927                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 109:           
      +                            CREN = 1;
   928   000056  88AB               	bsf	4011,4,c	;volatile
   929   000058                     i1l1266:
   930                           
   931                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 112:         My
      +                          usartRead();
   932   000058  ECE2  F000         	call	_MyusartRead	;wreg free
   933   00005C                     i1l159:
   934   00005C  C043  FFF4         	movff	??_Lo_ISR+6,prodh
   935   000060  C042  FFF3         	movff	??_Lo_ISR+5,prodl
   936   000064  C041  FFDA         	movff	??_Lo_ISR+4,fsr2h
   937   000068  C040  FFD9         	movff	??_Lo_ISR+3,fsr2l
   938   00006C  C03F  FFE0         	movff	??_Lo_ISR+2,bsr
   939   000070  C03E  FFE8         	movff	??_Lo_ISR+1,wreg
   940   000074  C03D  FFD8         	movff	??_Lo_ISR,status
   941   000078  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   942   00007A  0010               	retfie	
   943   00007C                     __end_of_Lo_ISR:
   944                           	callstack 0
   945                           
   946 ;; *************** function _MyusartRead *****************
   947 ;; Defined at:
   948 ;;		line 67 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  number          2   16[COMRAM] int 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   962 ;;      Params:         0       0       0       0       0       0       0
   963 ;;      Locals:         2       0       0       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0       0       0
   965 ;;      Totals:         3       0       0       0       0       0       0
   966 ;;Total ram usage:        3 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 3
   969 ;; This function calls:
   970 ;;		_UART_Write
   971 ;;		___awmod
   972 ;;		_atoi
   973 ;;		i1_ClearBuffer
   974 ;; This function is called by:
   975 ;;		_Lo_ISR
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text11
   980   0001C4                     __ptext11:
   981                           	callstack 0
   982   0001C4                     _MyusartRead:
   983                           	callstack 24
   984   0001C4                     
   985                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 70:     mystrin
      +                          g[lenStr] = RCREG;
   986   0001C4  0E03               	movlw	low _mystring
   987   0001C6  2401               	addwf	_lenStr^0,w,c
   988   0001C8  6ED9               	movwf	fsr2l,c
   989   0001CA  0E00               	movlw	high _mystring
   990   0001CC  2002               	addwfc	(_lenStr+1)^0,w,c
   991   0001CE  6EDA               	movwf	fsr2h,c
   992   0001D0  CFAE FFDF          	movff	4014,indf2	;volatile
   993   0001D4                     
   994                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 71:     UART_Wr
      +                          ite(mystring[lenStr]);
   995   0001D4  0E03               	movlw	low _mystring
   996   0001D6  2401               	addwf	_lenStr^0,w,c
   997   0001D8  6ED9               	movwf	fsr2l,c
   998   0001DA  0E00               	movlw	high _mystring
   999   0001DC  2002               	addwfc	(_lenStr+1)^0,w,c
  1000   0001DE  6EDA               	movwf	fsr2h,c
  1001   0001E0  50DF               	movf	indf2,w,c
  1002   0001E2  EC96  F002         	call	_UART_Write
  1003   0001E6                     
  1004                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 72:     if (mys
      +                          tring[lenStr] == '\r')
  1005   0001E6  0E03               	movlw	low _mystring
  1006   0001E8  2401               	addwf	_lenStr^0,w,c
  1007   0001EA  6ED9               	movwf	fsr2l,c
  1008   0001EC  0E00               	movlw	high _mystring
  1009   0001EE  2002               	addwfc	(_lenStr+1)^0,w,c
  1010   0001F0  6EDA               	movwf	fsr2h,c
  1011   0001F2  0E0D               	movlw	13
  1012   0001F4  18DE               	xorwf	postinc2,w,c
  1013   0001F6  A4D8               	btfss	status,2,c
  1014   0001F8  EF00  F001         	goto	i1u41_21
  1015   0001FC  EF02  F001         	goto	i1u41_20
  1016   000200                     i1u41_21:
  1017   000200  EF34  F001         	goto	i1l1248
  1018   000204                     i1u41_20:
  1019   000204                     
  1020                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 73:     {;C:/Us
      +                          ers/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 74:         int numbe
      +                          r = atoi(mystring);
  1021   000204  0E03               	movlw	low _mystring
  1022   000206  6E31               	movwf	atoi@s^0,c
  1023   000208  0E00               	movlw	high _mystring
  1024   00020A  6E32               	movwf	(atoi@s+1)^0,c
  1025   00020C  EC40  F000         	call	_atoi	;wreg free
  1026   000210  C031  F03B         	movff	?_atoi,MyusartRead@number
  1027   000214  C032  F03C         	movff	?_atoi+1,MyusartRead@number+1
  1028   000218                     
  1029                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 75:         if 
      +                          (0 < number && 16 > number)
  1030   000218  BE3C               	btfsc	(MyusartRead@number+1)^0,7,c
  1031   00021A  EF17  F001         	goto	i1u42_21
  1032   00021E  503C               	movf	(MyusartRead@number+1)^0,w,c
  1033   000220  E108               	bnz	i1u42_20
  1034   000222  043B               	decf	MyusartRead@number^0,w,c
  1035   000224  A0D8               	btfss	status,0,c
  1036   000226  EF17  F001         	goto	i1u42_21
  1037   00022A  EF19  F001         	goto	i1u42_20
  1038   00022E                     i1u42_21:
  1039   00022E  EF2B  F001         	goto	i1l1242
  1040   000232                     i1u42_20:
  1041   000232  BE3C               	btfsc	(MyusartRead@number+1)^0,7,c
  1042   000234  EF27  F001         	goto	i1u43_20
  1043   000238  503C               	movf	(MyusartRead@number+1)^0,w,c
  1044   00023A  E107               	bnz	i1u43_21
  1045   00023C  0E10               	movlw	16
  1046   00023E  5C3B               	subwf	MyusartRead@number^0,w,c
  1047   000240  B0D8               	btfsc	status,0,c
  1048   000242  EF25  F001         	goto	i1u43_21
  1049   000246  EF27  F001         	goto	i1u43_20
  1050   00024A                     i1u43_21:
  1051   00024A  EF2B  F001         	goto	i1l1242
  1052   00024E                     i1u43_20:
  1053   00024E                     
  1054                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 76:         {;C
      +                          :/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 77:             L
      +                          ATD = number;
  1055   00024E  C03B  FF8C         	movff	MyusartRead@number,3980	;volatile
  1056                           
  1057                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 78:         }
  1058   000252  EF2D  F001         	goto	i1l1244
  1059   000256                     i1l1242:
  1060                           
  1061                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 80:         {;C
      +                          :/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 81:             L
      +                          ATD = 0;
  1062   000256  0E00               	movlw	0
  1063   000258  6E8C               	movwf	140,c	;volatile
  1064   00025A                     i1l1244:
  1065                           
  1066                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 83:         UAR
      +                          T_Write('\n');
  1067   00025A  0E0A               	movlw	10
  1068   00025C  EC96  F002         	call	_UART_Write
  1069   000260                     
  1070                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 84:         Cle
      +                          arBuffer();
  1071   000260  ECE1  F001         	call	i1_ClearBuffer	;wreg free
  1072                           
  1073                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 85:     }
  1074   000264  EF44  F001         	goto	i1l149
  1075   000268                     i1l1248:
  1076                           
  1077                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 87:     {;C:/Us
      +                          ers/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 88:         lenStr++;
  1078   000268  4A01               	infsnz	_lenStr^0,f,c
  1079   00026A  2A02               	incf	(_lenStr+1)^0,f,c
  1080   00026C                     
  1081                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 89:         len
      +                          Str %= 10;
  1082   00026C  C001  F02B         	movff	_lenStr,___awmod@dividend
  1083   000270  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
  1084   000274  0E00               	movlw	0
  1085   000276  6E2E               	movwf	(___awmod@divisor+1)^0,c
  1086   000278  0E0A               	movlw	10
  1087   00027A  6E2D               	movwf	___awmod@divisor^0,c
  1088   00027C  EC45  F001         	call	___awmod	;wreg free
  1089   000280  C02B  F001         	movff	?___awmod,_lenStr
  1090   000284  C02C  F002         	movff	?___awmod+1,_lenStr+1
  1091   000288                     i1l149:
  1092   000288  0012               	return		;funcret
  1093   00028A                     __end_of_MyusartRead:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function i1_ClearBuffer *****************
  1097 ;; Defined at:
  1098 ;;		line 60 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  i               2    0[COMRAM] int 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         2       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_MyusartRead
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text12
  1127   0003C2                     __ptext12:
  1128                           	callstack 0
  1129   0003C2                     i1_ClearBuffer:
  1130                           	callstack 25
  1131   0003C2                     
  1132                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 62:     for (in
      +                          t i = 0; i < 10; i++)
  1133   0003C2  0E00               	movlw	0
  1134   0003C4  6E2C               	movwf	(i1ClearBuffer@i+1)^0,c
  1135   0003C6  0E00               	movlw	0
  1136   0003C8  6E2B               	movwf	i1ClearBuffer@i^0,c
  1137   0003CA                     i1l1028:
  1138                           
  1139                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 63:         mys
      +                          tring[i] = '\0';
  1140   0003CA  0E03               	movlw	low _mystring
  1141   0003CC  242B               	addwf	i1ClearBuffer@i^0,w,c
  1142   0003CE  6ED9               	movwf	fsr2l,c
  1143   0003D0  0E00               	movlw	high _mystring
  1144   0003D2  202C               	addwfc	(i1ClearBuffer@i+1)^0,w,c
  1145   0003D4  6EDA               	movwf	fsr2h,c
  1146   0003D6  0E00               	movlw	0
  1147   0003D8  6EDF               	movwf	indf2,c
  1148   0003DA  4A2B               	infsnz	i1ClearBuffer@i^0,f,c
  1149   0003DC  2A2C               	incf	(i1ClearBuffer@i+1)^0,f,c
  1150   0003DE  BE2C               	btfsc	(i1ClearBuffer@i+1)^0,7,c
  1151   0003E0  EFFB  F001         	goto	i1u16_21
  1152   0003E4  502C               	movf	(i1ClearBuffer@i+1)^0,w,c
  1153   0003E6  E109               	bnz	i1u16_20
  1154   0003E8  0E0A               	movlw	10
  1155   0003EA  5C2B               	subwf	i1ClearBuffer@i^0,w,c
  1156   0003EC  A0D8               	btfss	status,0,c
  1157   0003EE  EFFB  F001         	goto	i1u16_21
  1158   0003F2  EFFD  F001         	goto	i1u16_20
  1159   0003F6                     i1u16_21:
  1160   0003F6  EFE5  F001         	goto	i1l1028
  1161   0003FA                     i1u16_20:
  1162   0003FA                     
  1163                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 64:     lenStr 
      +                          = 0;
  1164   0003FA  0E00               	movlw	0
  1165   0003FC  6E02               	movwf	(_lenStr+1)^0,c
  1166   0003FE  0E00               	movlw	0
  1167   000400  6E01               	movwf	_lenStr^0,c
  1168   000402  0012               	return		;funcret
  1169   000404                     __end_ofi1_ClearBuffer:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _atoi *****************
  1173 ;; Defined at:
  1174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1177 ;;		 -> mystring(20), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  n               2   13[COMRAM] int 
  1180 ;;  neg             2   11[COMRAM] int 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    6[COMRAM] int 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1190 ;;      Params:         2       0       0       0       0       0       0
  1191 ;;      Locals:         4       0       0       0       0       0       0
  1192 ;;      Temps:          3       0       0       0       0       0       0
  1193 ;;      Totals:         9       0       0       0       0       0       0
  1194 ;;Total ram usage:        9 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 2
  1197 ;; This function calls:
  1198 ;;		___wmul
  1199 ;;		_isdigit
  1200 ;;		_isspace
  1201 ;; This function is called by:
  1202 ;;		_MyusartRead
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text13
  1207   000080                     __ptext13:
  1208                           	callstack 0
  1209   000080                     _atoi:
  1210                           	callstack 24
  1211   000080  0E00               	movlw	0
  1212   000082  6E39               	movwf	(atoi@n+1)^0,c
  1213   000084  0E00               	movlw	0
  1214   000086  6E38               	movwf	atoi@n^0,c
  1215   000088  0E00               	movlw	0
  1216   00008A  6E37               	movwf	(atoi@neg+1)^0,c
  1217   00008C  0E00               	movlw	0
  1218   00008E  6E36               	movwf	atoi@neg^0,c
  1219   000090  EF4C  F000         	goto	i1l1158
  1220   000094                     i1l1154:
  1221   000094  4A31               	infsnz	atoi@s^0,f,c
  1222   000096  2A32               	incf	(atoi@s+1)^0,f,c
  1223   000098                     i1l1158:
  1224   000098  C031  FFD9         	movff	atoi@s,fsr2l
  1225   00009C  C032  FFDA         	movff	atoi@s+1,fsr2h
  1226   0000A0  0E20               	movlw	32
  1227   0000A2  18DE               	xorwf	postinc2,w,c
  1228   0000A4  B4D8               	btfsc	status,2,c
  1229   0000A6  EF57  F000         	goto	i1u30_21
  1230   0000AA  EF59  F000         	goto	i1u30_20
  1231   0000AE                     i1u30_21:
  1232   0000AE  EF4A  F000         	goto	i1l1154
  1233   0000B2                     i1u30_20:
  1234   0000B2  C031  FFD9         	movff	atoi@s,fsr2l
  1235   0000B6  C032  FFDA         	movff	atoi@s+1,fsr2h
  1236   0000BA  50DF               	movf	indf2,w,c
  1237   0000BC  6E33               	movwf	??_atoi^0,c
  1238   0000BE  0EF7               	movlw	247
  1239   0000C0  2433               	addwf	??_atoi^0,w,c
  1240   0000C2  6E34               	movwf	(??_atoi+1)^0,c
  1241   0000C4  6A35               	clrf	(??_atoi+2)^0,c
  1242   0000C6  0EFF               	movlw	255
  1243   0000C8  2235               	addwfc	(??_atoi+2)^0,f,c
  1244   0000CA  5035               	movf	(??_atoi+2)^0,w,c
  1245   0000CC  E109               	bnz	i1u31_20
  1246   0000CE  0E05               	movlw	5
  1247   0000D0  5C34               	subwf	(??_atoi+1)^0,w,c
  1248   0000D2  A0D8               	btfss	status,0,c
  1249   0000D4  EF6E  F000         	goto	i1u31_21
  1250   0000D8  EF70  F000         	goto	i1u31_20
  1251   0000DC                     i1u31_21:
  1252   0000DC  EF4A  F000         	goto	i1l1154
  1253   0000E0                     i1u31_20:
  1254   0000E0  EF7A  F000         	goto	i1l1166
  1255   0000E4                     i1l1162:
  1256   0000E4  0E00               	movlw	0
  1257   0000E6  6E37               	movwf	(atoi@neg+1)^0,c
  1258   0000E8  0E01               	movlw	1
  1259   0000EA  6E36               	movwf	atoi@neg^0,c
  1260   0000EC                     i1l1164:
  1261   0000EC  4A31               	infsnz	atoi@s^0,f,c
  1262   0000EE  2A32               	incf	(atoi@s+1)^0,f,c
  1263   0000F0  EFAF  F000         	goto	i1l1174
  1264   0000F4                     i1l1166:
  1265   0000F4  C031  FFD9         	movff	atoi@s,fsr2l
  1266   0000F8  C032  FFDA         	movff	atoi@s+1,fsr2h
  1267   0000FC  50DF               	movf	indf2,w,c
  1268   0000FE  6E33               	movwf	??_atoi^0,c
  1269   000100  6A34               	clrf	(??_atoi+1)^0,c
  1270                           
  1271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1272                           ; Switch size 1, requested type "simple"
  1273                           ; Number of cases is 1, Range of values is 0 to 0
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte            4     3 (average)
  1277                           ;	Chosen strategy is simple_byte
  1278   000102  5034               	movf	(??_atoi+1)^0,w,c
  1279   000104  0A00               	xorlw	0	; case 0
  1280   000106  B4D8               	btfsc	status,2,c
  1281   000108  EF88  F000         	goto	i1l1274
  1282   00010C  EFAF  F000         	goto	i1l1174
  1283   000110                     i1l1274:
  1284                           
  1285                           ; Switch size 1, requested type "simple"
  1286                           ; Number of cases is 2, Range of values is 43 to 45
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte            7     4 (average)
  1290                           ;	Chosen strategy is simple_byte
  1291   000110  5033               	movf	??_atoi^0,w,c
  1292   000112  0A2B               	xorlw	43	; case 43
  1293   000114  B4D8               	btfsc	status,2,c
  1294   000116  EF76  F000         	goto	i1l1164
  1295   00011A  0A06               	xorlw	6	; case 45
  1296   00011C  B4D8               	btfsc	status,2,c
  1297   00011E  EF72  F000         	goto	i1l1162
  1298   000122  EFAF  F000         	goto	i1l1174
  1299   000126                     i1l1168:
  1300   000126  C038  F02B         	movff	atoi@n,___wmul@multiplier
  1301   00012A  C039  F02C         	movff	atoi@n+1,___wmul@multiplier+1
  1302   00012E  0E00               	movlw	0
  1303   000130  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1304   000132  0E0A               	movlw	10
  1305   000134  6E2D               	movwf	___wmul@multiplicand^0,c
  1306   000136  EC60  F002         	call	___wmul	;wreg free
  1307   00013A  C031  FFD9         	movff	atoi@s,fsr2l
  1308   00013E  C032  FFDA         	movff	atoi@s+1,fsr2h
  1309   000142  50DF               	movf	indf2,w,c
  1310   000144  6E33               	movwf	??_atoi^0,c
  1311   000146  5033               	movf	??_atoi^0,w,c
  1312   000148  5E2B               	subwf	?___wmul^0,f,c
  1313   00014A  0E00               	movlw	0
  1314   00014C  5A2C               	subwfb	(?___wmul+1)^0,f,c
  1315   00014E  0E30               	movlw	48
  1316   000150  242B               	addwf	?___wmul^0,w,c
  1317   000152  6E38               	movwf	atoi@n^0,c
  1318   000154  0E00               	movlw	0
  1319   000156  202C               	addwfc	(?___wmul+1)^0,w,c
  1320   000158  6E39               	movwf	(atoi@n+1)^0,c
  1321   00015A  EF76  F000         	goto	i1l1164
  1322   00015E                     i1l1174:
  1323   00015E  C031  FFD9         	movff	atoi@s,fsr2l
  1324   000162  C032  FFDA         	movff	atoi@s+1,fsr2h
  1325   000166  50DF               	movf	indf2,w,c
  1326   000168  6E33               	movwf	??_atoi^0,c
  1327   00016A  0ED0               	movlw	208
  1328   00016C  2433               	addwf	??_atoi^0,w,c
  1329   00016E  6E34               	movwf	(??_atoi+1)^0,c
  1330   000170  6A35               	clrf	(??_atoi+2)^0,c
  1331   000172  0EFF               	movlw	255
  1332   000174  2235               	addwfc	(??_atoi+2)^0,f,c
  1333   000176  5035               	movf	(??_atoi+2)^0,w,c
  1334   000178  E109               	bnz	i1u32_20
  1335   00017A  0E0A               	movlw	10
  1336   00017C  5C34               	subwf	(??_atoi+1)^0,w,c
  1337   00017E  A0D8               	btfss	status,0,c
  1338   000180  EFC4  F000         	goto	i1u32_21
  1339   000184  EFC6  F000         	goto	i1u32_20
  1340   000188                     i1u32_21:
  1341   000188  EF93  F000         	goto	i1l1168
  1342   00018C                     i1u32_20:
  1343   00018C  5036               	movf	atoi@neg^0,w,c
  1344   00018E  1037               	iorwf	(atoi@neg+1)^0,w,c
  1345   000190  A4D8               	btfss	status,2,c
  1346   000192  EFCD  F000         	goto	i1u33_21
  1347   000196  EFCF  F000         	goto	i1u33_20
  1348   00019A                     i1u33_21:
  1349   00019A  EFDD  F000         	goto	i1l855
  1350   00019E                     i1u33_20:
  1351   00019E  C038  F033         	movff	atoi@n,??_atoi
  1352   0001A2  C039  F034         	movff	atoi@n+1,??_atoi+1
  1353   0001A6  1E33               	comf	??_atoi^0,f,c
  1354   0001A8  1E34               	comf	(??_atoi+1)^0,f,c
  1355   0001AA  4A33               	infsnz	??_atoi^0,f,c
  1356   0001AC  2A34               	incf	(??_atoi+1)^0,f,c
  1357   0001AE  C033  F031         	movff	??_atoi,?_atoi
  1358   0001B2  C034  F032         	movff	??_atoi+1,?_atoi+1
  1359   0001B6  EFE1  F000         	goto	i1l858
  1360   0001BA                     i1l855:
  1361   0001BA  C038  F031         	movff	atoi@n,?_atoi
  1362   0001BE  C039  F032         	movff	atoi@n+1,?_atoi+1
  1363   0001C2                     i1l858:
  1364   0001C2  0012               	return		;funcret
  1365   0001C4                     __end_of_atoi:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _isspace *****************
  1369 ;; Defined at:
  1370 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  c               2    0[COMRAM] int 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2    0[COMRAM] int 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1384 ;;      Params:         2       0       0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0
  1386 ;;      Temps:          2       0       0       0       0       0       0
  1387 ;;      Totals:         5       0       0       0       0       0       0
  1388 ;;Total ram usage:        5 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_atoi
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text14
  1399   00033A                     __ptext14:
  1400                           	callstack 0
  1401   00033A                     _isspace:
  1402                           	callstack 24
  1403   00033A  0E01               	movlw	1
  1404   00033C  6E2F               	movwf	_isspace$1216^0,c
  1405   00033E  0E20               	movlw	32
  1406   000340  182B               	xorwf	isspace@c^0,w,c
  1407   000342  102C               	iorwf	(isspace@c+1)^0,w,c
  1408   000344  B4D8               	btfsc	status,2,c
  1409   000346  EFA7  F001         	goto	i1u26_21
  1410   00034A  EFA9  F001         	goto	i1u26_20
  1411   00034E                     i1u26_21:
  1412   00034E  EFBC  F001         	goto	i1l1144
  1413   000352                     i1u26_20:
  1414   000352  0EF7               	movlw	247
  1415   000354  242B               	addwf	isspace@c^0,w,c
  1416   000356  6E2D               	movwf	??_isspace^0,c
  1417   000358  0EFF               	movlw	255
  1418   00035A  202C               	addwfc	(isspace@c+1)^0,w,c
  1419   00035C  6E2E               	movwf	(??_isspace+1)^0,c
  1420   00035E  502E               	movf	(??_isspace+1)^0,w,c
  1421   000360  E109               	bnz	i1u27_20
  1422   000362  0E05               	movlw	5
  1423   000364  5C2D               	subwf	??_isspace^0,w,c
  1424   000366  A0D8               	btfss	status,0,c
  1425   000368  EFB8  F001         	goto	i1u27_21
  1426   00036C  EFBA  F001         	goto	i1u27_20
  1427   000370                     i1u27_21:
  1428   000370  EFBC  F001         	goto	i1l1144
  1429   000374                     i1u27_20:
  1430   000374  0E00               	movlw	0
  1431   000376  6E2F               	movwf	_isspace$1216^0,c
  1432   000378                     i1l1144:
  1433   000378  C02F  F02B         	movff	_isspace$1216,?_isspace
  1434   00037C  6A2C               	clrf	(?_isspace+1)^0,c
  1435   00037E  0012               	return		;funcret
  1436   000380                     __end_of_isspace:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _isdigit *****************
  1440 ;; Defined at:
  1441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  c               2    0[COMRAM] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  2    0[COMRAM] int 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1455 ;;      Params:         2       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0
  1457 ;;      Temps:          2       0       0       0       0       0       0
  1458 ;;      Totals:         4       0       0       0       0       0       0
  1459 ;;Total ram usage:        4 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_atoi
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text15
  1470   000442                     __ptext15:
  1471                           	callstack 0
  1472   000442                     _isdigit:
  1473                           	callstack 24
  1474   000442  0ED0               	movlw	208
  1475   000444  242B               	addwf	isdigit@c^0,w,c
  1476   000446  6E2D               	movwf	??_isdigit^0,c
  1477   000448  0EFF               	movlw	255
  1478   00044A  202C               	addwfc	(isdigit@c+1)^0,w,c
  1479   00044C  6E2E               	movwf	(??_isdigit+1)^0,c
  1480   00044E  502E               	movf	(??_isdigit+1)^0,w,c
  1481   000450  E10A               	bnz	i1u28_20
  1482   000452  0E0A               	movlw	10
  1483   000454  5C2D               	subwf	??_isdigit^0,w,c
  1484   000456  A0D8               	btfss	status,0,c
  1485   000458  EF30  F002         	goto	i1u28_21
  1486   00045C  EF33  F002         	goto	i1u28_20
  1487   000460                     i1u28_21:
  1488   000460  0E01               	movlw	1
  1489   000462  EF34  F002         	goto	i1u29_20
  1490   000466                     i1u28_20:
  1491   000466  0E00               	movlw	0
  1492   000468                     i1u29_20:
  1493   000468  6E2B               	movwf	?_isdigit^0,c
  1494   00046A  6A2C               	clrf	(?_isdigit+1)^0,c
  1495   00046C  0012               	return		;funcret
  1496   00046E                     __end_of_isdigit:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function ___wmul *****************
  1500 ;; Defined at:
  1501 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  multiplier      2    0[COMRAM] unsigned int 
  1504 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  product         2    4[COMRAM] unsigned int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  2    0[COMRAM] unsigned int 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, prodl, prodh
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         4       0       0       0       0       0       0
  1517 ;;      Locals:         2       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         6       0       0       0       0       0       0
  1520 ;;Total ram usage:        6 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_atoi
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text16
  1531   0004C0                     __ptext16:
  1532                           	callstack 0
  1533   0004C0                     ___wmul:
  1534                           	callstack 24
  1535   0004C0  502B               	movf	___wmul@multiplier^0,w,c
  1536   0004C2  022D               	mulwf	___wmul@multiplicand^0,c
  1537   0004C4  CFF3 F02F          	movff	prodl,___wmul@product
  1538   0004C8  CFF4 F030          	movff	prodh,___wmul@product+1
  1539   0004CC  502B               	movf	___wmul@multiplier^0,w,c
  1540   0004CE  022E               	mulwf	(___wmul@multiplicand+1)^0,c
  1541   0004D0  50F3               	movf	243,w,c
  1542   0004D2  2630               	addwf	(___wmul@product+1)^0,f,c
  1543   0004D4  502C               	movf	(___wmul@multiplier+1)^0,w,c
  1544   0004D6  022D               	mulwf	___wmul@multiplicand^0,c
  1545   0004D8  50F3               	movf	243,w,c
  1546   0004DA  2630               	addwf	(___wmul@product+1)^0,f,c
  1547   0004DC  C02F  F02B         	movff	___wmul@product,?___wmul
  1548   0004E0  C030  F02C         	movff	___wmul@product+1,?___wmul+1
  1549   0004E4  0012               	return		;funcret
  1550   0004E6                     __end_of___wmul:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function ___awmod *****************
  1554 ;; Defined at:
  1555 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  dividend        2    0[COMRAM] int 
  1558 ;;  divisor         2    2[COMRAM] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  sign            1    5[COMRAM] unsigned char 
  1561 ;;  counter         1    4[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2    0[COMRAM] int 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1571 ;;      Params:         4       0       0       0       0       0       0
  1572 ;;      Locals:         2       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0
  1574 ;;      Totals:         6       0       0       0       0       0       0
  1575 ;;Total ram usage:        6 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_MyusartRead
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text17
  1586   00028A                     __ptext17:
  1587                           	callstack 0
  1588   00028A                     ___awmod:
  1589                           	callstack 25
  1590   00028A  0E00               	movlw	0
  1591   00028C  6E30               	movwf	___awmod@sign^0,c
  1592   00028E  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
  1593   000290  EF4E  F001         	goto	i1u34_20
  1594   000294  EF4C  F001         	goto	i1u34_21
  1595   000298                     i1u34_21:
  1596   000298  EF54  F001         	goto	i1l1192
  1597   00029C                     i1u34_20:
  1598   00029C  6C2B               	negf	___awmod@dividend^0,c
  1599   00029E  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1600   0002A0  B0D8               	btfsc	status,0,c
  1601   0002A2  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1602   0002A4  0E01               	movlw	1
  1603   0002A6  6E30               	movwf	___awmod@sign^0,c
  1604   0002A8                     i1l1192:
  1605   0002A8  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
  1606   0002AA  EF5B  F001         	goto	i1u35_20
  1607   0002AE  EF59  F001         	goto	i1u35_21
  1608   0002B2                     i1u35_21:
  1609   0002B2  EF5F  F001         	goto	i1l1196
  1610   0002B6                     i1u35_20:
  1611   0002B6  6C2D               	negf	___awmod@divisor^0,c
  1612   0002B8  1E2E               	comf	(___awmod@divisor+1)^0,f,c
  1613   0002BA  B0D8               	btfsc	status,0,c
  1614   0002BC  2A2E               	incf	(___awmod@divisor+1)^0,f,c
  1615   0002BE                     i1l1196:
  1616   0002BE  502D               	movf	___awmod@divisor^0,w,c
  1617   0002C0  102E               	iorwf	(___awmod@divisor+1)^0,w,c
  1618   0002C2  B4D8               	btfsc	status,2,c
  1619   0002C4  EF66  F001         	goto	i1u36_21
  1620   0002C8  EF68  F001         	goto	i1u36_20
  1621   0002CC                     i1u36_21:
  1622   0002CC  EF8C  F001         	goto	i1l1212
  1623   0002D0                     i1u36_20:
  1624   0002D0  0E01               	movlw	1
  1625   0002D2  6E2F               	movwf	___awmod@counter^0,c
  1626   0002D4  EF70  F001         	goto	i1l1202
  1627   0002D8                     i1l1200:
  1628   0002D8  90D8               	bcf	status,0,c
  1629   0002DA  362D               	rlcf	___awmod@divisor^0,f,c
  1630   0002DC  362E               	rlcf	(___awmod@divisor+1)^0,f,c
  1631   0002DE  2A2F               	incf	___awmod@counter^0,f,c
  1632   0002E0                     i1l1202:
  1633   0002E0  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
  1634   0002E2  EF75  F001         	goto	i1u37_21
  1635   0002E6  EF77  F001         	goto	i1u37_20
  1636   0002EA                     i1u37_21:
  1637   0002EA  EF6C  F001         	goto	i1l1200
  1638   0002EE                     i1u37_20:
  1639   0002EE                     i1l1204:
  1640   0002EE  502D               	movf	___awmod@divisor^0,w,c
  1641   0002F0  5C2B               	subwf	___awmod@dividend^0,w,c
  1642   0002F2  502E               	movf	(___awmod@divisor+1)^0,w,c
  1643   0002F4  582C               	subwfb	(___awmod@dividend+1)^0,w,c
  1644   0002F6  A0D8               	btfss	status,0,c
  1645   0002F8  EF80  F001         	goto	i1u38_21
  1646   0002FC  EF82  F001         	goto	i1u38_20
  1647   000300                     i1u38_21:
  1648   000300  EF86  F001         	goto	i1l1208
  1649   000304                     i1u38_20:
  1650   000304  502D               	movf	___awmod@divisor^0,w,c
  1651   000306  5E2B               	subwf	___awmod@dividend^0,f,c
  1652   000308  502E               	movf	(___awmod@divisor+1)^0,w,c
  1653   00030A  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
  1654   00030C                     i1l1208:
  1655   00030C  90D8               	bcf	status,0,c
  1656   00030E  322E               	rrcf	(___awmod@divisor+1)^0,f,c
  1657   000310  322D               	rrcf	___awmod@divisor^0,f,c
  1658   000312  2E2F               	decfsz	___awmod@counter^0,f,c
  1659   000314  EF77  F001         	goto	i1l1204
  1660   000318                     i1l1212:
  1661   000318  5030               	movf	___awmod@sign^0,w,c
  1662   00031A  B4D8               	btfsc	status,2,c
  1663   00031C  EF92  F001         	goto	i1u39_21
  1664   000320  EF94  F001         	goto	i1u39_20
  1665   000324                     i1u39_21:
  1666   000324  EF98  F001         	goto	i1l1216
  1667   000328                     i1u39_20:
  1668   000328  6C2B               	negf	___awmod@dividend^0,c
  1669   00032A  1E2C               	comf	(___awmod@dividend+1)^0,f,c
  1670   00032C  B0D8               	btfsc	status,0,c
  1671   00032E  2A2C               	incf	(___awmod@dividend+1)^0,f,c
  1672   000330                     i1l1216:
  1673   000330  C02B  F02B         	movff	___awmod@dividend,?___awmod
  1674   000334  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
  1675   000338  0012               	return		;funcret
  1676   00033A                     __end_of___awmod:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _UART_Write *****************
  1680 ;; Defined at:
  1681 ;;		line 47 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  data            1    wreg     unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  data            1    0[COMRAM] unsigned char 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1695 ;;      Params:         0       0       0       0       0       0       0
  1696 ;;      Locals:         1       0       0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0
  1698 ;;      Totals:         1       0       0       0       0       0       0
  1699 ;;Total ram usage:        1 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_MyusartRead
  1706 ;;		_UART_Write_Text
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text18
  1711   00052C                     __ptext18:
  1712                           	callstack 0
  1713   00052C                     _UART_Write:
  1714                           	callstack 25
  1715                           
  1716                           ;incstack = 0
  1717                           ;UART_Write@data stored from wreg
  1718   00052C  6E2B               	movwf	UART_Write@data^0,c
  1719   00052E                     i1l128:
  1720                           
  1721                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 49:     while (
      +                          !TXSTAbits.TRMT)
  1722   00052E  A2AC               	btfss	172,1,c	;volatile
  1723   000530  EF9C  F002         	goto	i1u5_21
  1724   000534  EF9E  F002         	goto	i1u5_20
  1725   000538                     i1u5_21:
  1726   000538  EF97  F002         	goto	i1l128
  1727   00053C                     i1u5_20:
  1728   00053C                     
  1729                           ;C:/Users/Annie/MPLABXProjects/lab10_advance.X/setting_hardaware/uart.c: 51:     TXREG =
      +                           data;
  1730   00053C  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
  1731   000540  0012               	return		;funcret
  1732   000542                     __end_of_UART_Write:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _Hi_ISR *****************
  1736 ;; Defined at:
  1737 ;;		line 22 in file "C:/Users/Annie/MPLABXProjects/lab10_advance.X/main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		None
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		Interrupt level 2
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	intcode
  1765   000008                     __pintcode:
  1766                           	callstack 0
  1767   000008                     _Hi_ISR:
  1768                           	callstack 24
  1769                           
  1770                           ;incstack = 0
  1771   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1772   00000A  EDB4  F002         	call	int_func,f	;refresh shadow registers
  1773                           
  1774                           	psect	intcode_body
  1775   000568                     __pintcode_body:
  1776                           	callstack 24
  1777   000568                     int_func:
  1778                           	callstack 24
  1779   000568  0006               	pop		; remove dummy address from shadow register refresh
  1780   00056A  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1781   00056C  0011               	retfie		f
  1782   00056E                     __end_of_Hi_ISR:
  1783                           	callstack 0
  1784   000000                     
  1785                           	psect	rparam
  1786   000000                     
  1787                           	psect	temp
  1788   00004E                     btemp:
  1789                           	callstack 0
  1790   00004E                     	ds	1
  1791   000000                     int$flags	set	btemp
  1792   000000                     wtemp8	set	btemp+1
  1793   000000                     ttemp5	set	btemp+1
  1794   000000                     ttemp6	set	btemp+4
  1795   000000                     ttemp7	set	btemp+8
  1796                           
  1797                           	psect	idloc
  1798                           
  1799                           ;Config register IDLOC0 @ 0x200000
  1800                           ;	unspecified, using default values
  1801   200000                     	org	2097152
  1802   200000  FF                 	db	255
  1803                           
  1804                           ;Config register IDLOC1 @ 0x200001
  1805                           ;	unspecified, using default values
  1806   200001                     	org	2097153
  1807   200001  FF                 	db	255
  1808                           
  1809                           ;Config register IDLOC2 @ 0x200002
  1810                           ;	unspecified, using default values
  1811   200002                     	org	2097154
  1812   200002  FF                 	db	255
  1813                           
  1814                           ;Config register IDLOC3 @ 0x200003
  1815                           ;	unspecified, using default values
  1816   200003                     	org	2097155
  1817   200003  FF                 	db	255
  1818                           
  1819                           ;Config register IDLOC4 @ 0x200004
  1820                           ;	unspecified, using default values
  1821   200004                     	org	2097156
  1822   200004  FF                 	db	255
  1823                           
  1824                           ;Config register IDLOC5 @ 0x200005
  1825                           ;	unspecified, using default values
  1826   200005                     	org	2097157
  1827   200005  FF                 	db	255
  1828                           
  1829                           ;Config register IDLOC6 @ 0x200006
  1830                           ;	unspecified, using default values
  1831   200006                     	org	2097158
  1832   200006  FF                 	db	255
  1833                           
  1834                           ;Config register IDLOC7 @ 0x200007
  1835                           ;	unspecified, using default values
  1836   200007                     	org	2097159
  1837   200007  FF                 	db	255
  1838                           
  1839                           	psect	config
  1840                           
  1841                           ; Padding undefined space
  1842   300000                     	org	3145728
  1843   300000  FF                 	db	255
  1844                           
  1845                           ;Config register CONFIG1H @ 0x300001
  1846                           ;	Oscillator Selection bits
  1847                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1848                           ;	Fail-Safe Clock Monitor Enable bit
  1849                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1850                           ;	Internal/External Oscillator Switchover bit
  1851                           ;	IESO = ON, Oscillator Switchover mode enabled
  1852   300001                     	org	3145729
  1853   300001  88                 	db	136
  1854                           
  1855                           ;Config register CONFIG2L @ 0x300002
  1856                           ;	Power-up Timer Enable bit
  1857                           ;	PWRT = OFF, PWRT disabled
  1858                           ;	Brown-out Reset Enable bits
  1859                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1860                           ;	Brown Out Reset Voltage bits
  1861                           ;	BORV = 3, Minimum setting
  1862   300002                     	org	3145730
  1863   300002  1F                 	db	31
  1864                           
  1865                           ;Config register CONFIG2H @ 0x300003
  1866                           ;	Watchdog Timer Enable bit
  1867                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1868                           ;	Watchdog Timer Postscale Select bits
  1869                           ;	WDTPS = 1, 1:1
  1870   300003                     	org	3145731
  1871   300003  00                 	db	0
  1872                           
  1873                           ; Padding undefined space
  1874   300004                     	org	3145732
  1875   300004  FF                 	db	255
  1876                           
  1877                           ;Config register CONFIG3H @ 0x300005
  1878                           ;	CCP2 MUX bit
  1879                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1880                           ;	PORTB A/D Enable bit
  1881                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1882                           ;	Low-Power Timer1 Oscillator Enable bit
  1883                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1884                           ;	MCLR Pin Enable bit
  1885                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1886   300005                     	org	3145733
  1887   300005  83                 	db	131
  1888                           
  1889                           ;Config register CONFIG4L @ 0x300006
  1890                           ;	Stack Full/Underflow Reset Enable bit
  1891                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1892                           ;	Single-Supply ICSP Enable bit
  1893                           ;	LVP = OFF, Single-Supply ICSP disabled
  1894                           ;	Extended Instruction Set Enable bit
  1895                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1896                           ;	Background Debugger Enable bit
  1897                           ;	DEBUG = 0x1, unprogrammed default
  1898   300006                     	org	3145734
  1899   300006  81                 	db	129
  1900                           
  1901                           ; Padding undefined space
  1902   300007                     	org	3145735
  1903   300007  FF                 	db	255
  1904                           
  1905                           ;Config register CONFIG5L @ 0x300008
  1906                           ;	Code Protection bit
  1907                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1908                           ;	Code Protection bit
  1909                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1910                           ;	Code Protection bit
  1911                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1912                           ;	Code Protection bit
  1913                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1914   300008                     	org	3145736
  1915   300008  0F                 	db	15
  1916                           
  1917                           ;Config register CONFIG5H @ 0x300009
  1918                           ;	Boot Block Code Protection bit
  1919                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1920                           ;	Data EEPROM Code Protection bit
  1921                           ;	CPD = OFF, Data EEPROM not code-protected
  1922   300009                     	org	3145737
  1923   300009  C0                 	db	192
  1924                           
  1925                           ;Config register CONFIG6L @ 0x30000A
  1926                           ;	Write Protection bit
  1927                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1928                           ;	Write Protection bit
  1929                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1930                           ;	Write Protection bit
  1931                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1932                           ;	Write Protection bit
  1933                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1934   30000A                     	org	3145738
  1935   30000A  0F                 	db	15
  1936                           
  1937                           ;Config register CONFIG6H @ 0x30000B
  1938                           ;	Configuration Register Write Protection bit
  1939                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1940                           ;	Boot Block Write Protection bit
  1941                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1942                           ;	Data EEPROM Write Protection bit
  1943                           ;	WRTD = OFF, Data EEPROM not write-protected
  1944   30000B                     	org	3145739
  1945   30000B  E0                 	db	224
  1946                           
  1947                           ;Config register CONFIG7L @ 0x30000C
  1948                           ;	Table Read Protection bit
  1949                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1950                           ;	Table Read Protection bit
  1951                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1952                           ;	Table Read Protection bit
  1953                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1954                           ;	Table Read Protection bit
  1955                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1956   30000C                     	org	3145740
  1957   30000C  0F                 	db	15
  1958                           
  1959                           ;Config register CONFIG7H @ 0x30000D
  1960                           ;	Boot Block Table Read Protection bit
  1961                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1962   30000D                     	org	3145741
  1963   30000D  40                 	db	64
  1964                           tosu	equ	0xFFF
  1965                           tosh	equ	0xFFE
  1966                           tosl	equ	0xFFD
  1967                           stkptr	equ	0xFFC
  1968                           pclatu	equ	0xFFB
  1969                           pclath	equ	0xFFA
  1970                           pcl	equ	0xFF9
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           indf0	equ	0xFEF
  1978                           postinc0	equ	0xFEE
  1979                           postdec0	equ	0xFED
  1980                           preinc0	equ	0xFEC
  1981                           plusw0	equ	0xFEB
  1982                           fsr0h	equ	0xFEA
  1983                           fsr0l	equ	0xFE9
  1984                           wreg	equ	0xFE8
  1985                           indf1	equ	0xFE7
  1986                           postinc1	equ	0xFE6
  1987                           postdec1	equ	0xFE5
  1988                           preinc1	equ	0xFE4
  1989                           plusw1	equ	0xFE3
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           bsr	equ	0xFE0
  1993                           indf2	equ	0xFDF
  1994                           postinc2	equ	0xFDE
  1995                           postdec2	equ	0xFDD
  1996                           preinc2	equ	0xFDC
  1997                           plusw2	equ	0xFDB
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35      77
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[20]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->_atoi
    _atoi->___wmul

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     293
                        _ClearBuffer
                          _GetString
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     248
                                             27 COMRAM     8     4      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearBuffer                                          2     2      0      45
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               7     7      0    1579
                                             18 COMRAM     7     7      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          3     3      0    1579
                                             15 COMRAM     3     3      0
                         _UART_Write
                            ___awmod
                               _atoi
                      i1_ClearBuffer
 ---------------------------------------------------------------------------------
 (5) i1_ClearBuffer                                        2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1004
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              4     2      2     161
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod
     _atoi
       ___wmul
       _isdigit
       _isspace
     i1_ClearBuffer

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      4D       1       61.1%
BITBIGSFRll          C      0       0      29        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          6      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRlh          5      0       0      28        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      30        0.0%
DATA                 0      0      4D      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 20 02:05:58 2022

                           l40 052A                             l64 0566                             l57 054C  
                           l83 0514                             l86 055E                             bsr 000FE0  
          ___wmul@multiplicand 002D        __end_of_CCP1_Initialize 054E                            l125 0496  
                          l142 03C0                            l152 0556                            l902 0516  
                          l910 0544                            l904 0518                            l912 0548  
                          l920 046E                            l906 051C                            l914 054A  
                          l930 047E                            l922 0476                            l908 0542  
                          l916 0560                            l940 048C                            l932 0484  
                          l924 0478                            l918 0558                            l942 048E  
                          l934 0486                            l926 047A                            l944 0490  
                          l936 0488                            l928 047C                            l946 0492  
                          l938 048A                            l948 0494                            l878 0440  
                          u400 0440                            u401 043C                            u170 03B8  
                          u171 03B4                            _str 0017                   ___awmod@sign 0030  
                          wreg 000FE8                           l1040 050C                           l1050 0388  
                         l1042 0510                           l1052 0398                           l1044 0380  
                         l1220 054E                           l1036 0500                           l1054 039C  
                         l1038 0508                           l1056 03B8                           l1224 0404  
                         l1226 0414                           l1254 0498                           l1256 049C  
                         l1258 04A0                           _ADFM 007E07                           _CREN 007D5C  
                         _LATD 000F8C                           _RCIF 007CF5                           i2l23 056A  
                         _atoi 0080                           _main 0498                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 004E  
                         prodh 000FF4                           prodl 000FF3                           start 007C  
                 ___param_bank 000000               ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 0560  
                        ?_atoi 0031                          ?_main 002B                __end_of___awmod 033A  
                        _IRCF0 007E9C                          _IRCF1 007E9D                          _IRCF2 007E9E  
                        i1l131 0540                          i1l142 0402                          i1l128 052E  
                        i1l162 04E4                          i1l149 0288                          i1l406 0338  
                        i1l159 005C                          i1l861 046C                          i1l950 052E  
                        i1l855 01BA                          i1l952 053C                          i1l858 01C2  
                        i1l869 037E                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISD 000F95                          _TXREG 000FAD  
                  ?_UART_Write 002B                __end_of_isdigit 046E                          atoi@n 0038  
                        atoi@s 0031                    _ClearBuffer 0380                __end_of_isspace 0380  
                        ttemp5 004F                          ttemp6 0052                          ttemp7 0056  
                        status 000FD8                          wtemp8 004F                __initialization 04E6  
                 __end_of_atoi 01C4                   __end_of_main 04C0                         ??_atoi 0033  
                       ??_main 004E               ?_CCP1_Initialize 002B                  __activetblptr 000002  
                       _ADCON1 000FC1                         _ADRESH 000FC4                         _ADRESL 000FC3  
        __end_ofi1_ClearBuffer 0404                         i1l1030 03DA                         i1l1022 03C2  
                       i1l1200 02D8                         i1l1032 03DE                         i1l1210 0312  
                       i1l1202 02E0                         i1l1130 04C0                         i1l1034 03FA  
                       i1l1204 02EE                         i1l1212 0318                         i1l1132 04DC  
                       i1l1140 0352                         i1l1028 03CA                         i1l1214 0328  
                       i1l1206 0304                         i1l1142 0374                         i1l1230 01D4  
                       i1l1216 0330                         i1l1208 030C                         i1l1144 0378  
                       i1l1136 033A                         i1l1160 00B2                         i1l1152 0080  
                       i1l1240 024E                         i1l1232 01E6                         i1l1138 033E  
                       i1l1162 00E4                         i1l1154 0094                         i1l1250 026C  
                       i1l1242 0256                         i1l1234 0204                         i1l1148 0442  
                       i1l1164 00EC                         i1l1244 025A                         i1l1236 0218  
                       i1l1228 01C4                         i1l1260 0036                         i1l1190 02A4  
                       i1l1174 015E                         i1l1166 00F4                         i1l1158 0098  
                       i1l1246 0260                         i1l1238 0232                         i1l1262 0044  
                       i1l1192 02A8                         i1l1184 028A                         i1l1176 018C  
                       i1l1168 0126                         i1l1248 0268                         i1l1264 0052  
                       i1l1194 02B6                         i1l1186 028E                         i1l1178 019E  
                       i1l1274 0110                         i1l1266 0058                         i1l1196 02BE  
                       i1l1188 029C                         i1l1198 02D0                         i1u5_20 053C  
                       i1u5_21 0538                         _Hi_ISR 0008                         _Lo_ISR 0018  
                       ___wmul 04C0                      ??___awmod 002F                         _lenStr 0001  
                       clear_0 04EC                ___awmod@divisor 002D                         isa$std 000001  
              ___awmod@counter 002F                         _strcpy 0404                      ??_isdigit 002D  
                    ??_isspace 002D                         tblptru 000FF8              _SYSTEM_Initialize 0500  
                   __accesstop 0080        __end_of__initialization 04F2             ?_SYSTEM_Initialize 002B  
                ___rparam_used 000001              __end_of_GetString 0558                 __pcstackCOMRAM 002B  
          ??_SYSTEM_Initialize 0044              MyusartRead@number 003B                  ??_MyusartRead 003A  
    __end_of_SYSTEM_Initialize 0516                        ?_Hi_ISR 002B                        ?_Lo_ISR 002B  
                      ?___wmul 002B                        _CCP1CON 000FBD                        ?_strcpy 0046  
                 ??_UART_Write 002B                        i1u30_20 00B2                        i1u30_21 00AE  
                      i1u31_20 00E0                        i1u31_21 00DC                        i1u32_20 018C  
                      i1u16_20 03FA                        i1u32_21 0188                        i1u16_21 03F6  
                      i1u33_20 019E                        i1u41_20 0204                        i1u33_21 019A  
                      i1u41_21 0200                        i1u34_20 029C                        i1u26_20 0352  
                      i1u42_20 0232                        i1u34_21 0298                        i1u26_21 034E  
                      i1u42_21 022E                        i1u35_20 02B6                        i1u27_20 0374  
                      i1u43_20 024E                        i1u35_21 02B2                        i1u27_21 0370  
                      i1u43_21 024A                        i1u36_20 02D0                        i1u28_20 0466  
                      i1u44_20 0044                        i1u36_21 02CC                        i1u28_21 0460  
                      i1u44_21 0040                        i1u37_20 02EE                        i1u29_20 0468  
                      i1u45_20 0052                        i1u37_21 02EA                        i1u45_21 004E  
                      i1u38_20 0304                        i1u38_21 0300                        i1u39_20 0328  
                      i1u39_21 0324                   ?_ClearBuffer 002B            __end_of_MyusartRead 028A  
                      __Hparam 0000                        __Lparam 0000                        ___awmod 028A  
           __end_of_UART_Write 0542                        __pcinit 04E6                        __ramtop 0600  
                      __ptext0 0498                        __ptext1 0404                        __ptext2 0500  
                      __ptext3 046E                        __ptext4 0558                        __ptext5 0560  
                      __ptext6 0542                        __ptext7 0516                        __ptext8 054E  
                      __ptext9 0380          _OSCILLATOR_Initialize 0558                        _isdigit 0442  
             ___awmod@dividend 002B                        _isspace 033A                        atoi@neg 0036  
               __pintcode_body 0568           end_of_initialization 04F2                  __Lmediumconst 0000  
                      int_func 0568                      _RCSTAbits 000FAB                        postinc0 000FEE  
                      postinc2 000FDE                        strcpy@d 004C                        strcpy@s 004A  
               UART_Write@data 002B                      _TRISCbits 000F94                    _MyusartRead 01C4  
                    _TXSTAbits 000FAC                 __end_of_Hi_ISR 056E                 __end_of_Lo_ISR 007C  
 __end_of_INTERRUPT_Initialize 0568                      _GetString 054E                 __end_of___wmul 04E6  
                  _BAUDCONbits 000FB8                 _ADC_Initialize 0516         ?_OSCILLATOR_Initialize 002B  
               __end_of_strcpy 0442            start_initialization 04E6                   ClearBuffer@i 0044  
            ??_UART_Initialize 0044                       ??_Hi_ISR 002B                       ??_Lo_ISR 003D  
                     ??___wmul 002F         __end_of_ADC_Initialize 052C                     ?_GetString 0044  
                     ??_strcpy 004A                    __pbssCOMRAM 0001                  i1_ClearBuffer 03C2  
               i1ClearBuffer@i 002B              ??_CCP1_Initialize 0044                      __pintcode 0008  
                     ?___awmod 002B                ?_ADC_Initialize 002B                    __pintcodelo 0018  
                     ?_isdigit 002B                       ?_isspace 002B                 ?i1_ClearBuffer 002B  
         _INTERRUPT_Initialize 0560                 ___wmul@product 002F                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       _PIR1bits 000F9E                       _RCONbits 000FD0  
                  ??_GetString 0046                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 002B                   ?_MyusartRead 002B                   _isspace$1216 002F  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0044                _UART_Initialize 046E                ??i1_ClearBuffer 002B  
                     __ptext11 01C4                       __ptext12 03C2                       __ptext13 0080  
                     __ptext14 033A                       __ptext15 0442                       __ptext16 04C0  
                     __ptext17 028A                       __ptext18 052C                     strcpy@dest 0046  
                     isa$xinst 000000                       int$flags 004E                       _mystring 0003  
                   _INTCONbits 000FF2                _CCP1_Initialize 0542                       isdigit@c 002B  
       ??_INTERRUPT_Initialize 0044                  ??_ClearBuffer 0044                       intlevel1 0000  
                     intlevel2 0000                       isspace@c 002B                      strcpy@src 0048  
             ??_ADC_Initialize 0044        __end_of_UART_Initialize 0498                     _UART_Write 052C  
          __end_of_ClearBuffer 03C2  
